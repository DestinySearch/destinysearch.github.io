<b>UnityWebData1.0</b> ↕☺  ↕☺  ”54 !   <b>Resources/unity_default_resources</b>¦64 pƒ  ▼   <b>Managed/mono/4.0/machine.config</b>▬º4 hj8 '   <b>Il2CppData/Metadata/global-metadata.dat~$m</b> >   ♂   <b>boot.config</b>¼$m →ÆÕ ♀   <b>data.unity3d</b>ÖêB☺Á‹! ▬   <b>sharedassets0.resource</b>—vd☺oÂ< ▬   <b>sharedassets1.resource</b>  •) 45”   §  ►     <b>2019.4.11f1</b> ¶    	   s    ÿÿônŽ0ìÂ“I?↑«'‼B►î0    ÿÿí*♠Î¸ ?nûZµàÎ ÕH    ÿÿ→•RšÂë→—Í *CV½r/∟    ÿÿQ-Æ§l-b∟Ÿ♥´Ûd õi§    ÿÿØq4m™♂¼)M☻ôÃf¿←m€    ÿÿj§S""h’h¼Š¶ N„ç«+    ÿÿkYK¡­z↕š►g(¿↕¢ÅuÕ    ÿÿŒŠ¥E >Þ¹♥☼ PBÐa"r      ¶þ0ãØš mŒ4xIx ♀@$ðn{Ì±♦qÉÞ™:”2JïN   ◄       h♣  ,←  ☺   D       ˜   (‰  ☺   E       À©  4▲  ☺   ,☺      øÇ  Àˆ☺ ☻   -☺      ¸P☻ H&  ☻   ◄'       w☻ ¼U  ♥   t'      ÀÌ☻ ˆ   ♦   u'      HÍ☻ <▼  ☺   v'      ˆì☻ –Ç  ♣   w'       ´♥ l   ♥   Ø'       ´♥ °e  ♠   Ú'      @→♦ ¶•  ♠   Û'      X!♦ ´→  ♠   Ü'      ►<♦ ð∟  ♠   Ý'       Y♦ (^  ♠   Þ'      (·♦ °▬  ♠   ß'      ØÍ♦ 8„  ♠   à'      ►R♣ `   ♠   á'      pß♣ ð∟  ♠   â'      `ü♣ X☻  ♠   ã'      ¸þ♣ d•  ♠   ä'       ♠♠ ,♥  ♠   å'      P	♠ ,☻  ♠    (      €♂♠ tt  ♥   ¡(      ø♠ ˆR  ♥   ¢(      €Ò♠ (*  ♥   £(      ¨ü♠ @«* ♥   ¤(      è§1 (→  •   ¦(      ►Â1 xx☺ ♥   §(      ˆ:3 Ä◘  ♥   ¨(      PC3 T◄  ♥   ©(      ¨T3 ∟¶  ♥   ª(      Èh3 ¼☼  ♥   «(      ˆx3 l   ♥   ­(      ø˜3 L	  ♥   ®(      H¢3 @	  ♥   ♥*      ˆ«3 8%  ☺   ♦*      ÀÐ3 |   ♦   ø*      @Ñ3 (!  ◘   ù*      hò3 „☺  ♥   ú*      ðó3 °☻  ♥   û*       ö3 Œ☺  ♥   ü*      0ø3  ☺  ♥   ý*      Àù3 Œ☺  ♥   þ*      Pû3 ˆ☺  ♥   ÿ*      Øü3 œ☺  ♥    +      xþ3  ☻  ♥   ☺+      ◘☺4 à   ♥   ☻+      è☺4 4☺  ♥   ♥+       ♥4 ,☺  ♥   ♦+      P♦4 4☺  ♥   ♣+      ˆ♣4 ø☺  ♥   ♠+      €•4 ô☺  ♥   •+      x	4 ø☺  ♥   ◘+      p♂4 ô☺  ♥   	+      h
4 ø☺  ♥   
+      `☼4 ð☺  ♥   ♂+      P◄4 ˜☺  ♥   ♀+      è↕4  ☻  ♥   
+      x§4 à   ♥   ♫+      X▬4 ♦♦  ♥   ☼+      `→4  ♦  ♥   ►+      `▲4 Œ☺  ♥   ◄+      ð▼4 Œ☺  ♥   ↕+      €!4  ☺  ♥   Ù.          |       Û.      €   |       Þ.       ☺  t       á.      x☺  \        4      Ø☺  `       ☺4      8☻  h       ˜:      ►#4 „☻  ♥   8J       ☻  p       9J      ►♥  p       :J      €♥  x       ;J      ø♥  €       <J      x♦  x       œJ      ð♦  t       ☺       á
  <b>TemplateAsset</b>                       
  <b>TemplateAsset</b>   ▬   <b>UnityEngine.UIElements</b>      <b>UnityEngine.UIElementsModule.dll</b>    ☼   <b>VisualTreeAsset</b>     ←s]Û÷→6E³\q<x,/Þ☼   <b>VisualTreeAsset</b> ▬   <b>UnityEngine.UIElements</b>      <b>UnityEngine.UIElementsModule.dll</b>    
   <b>StyleSheet</b>      ½zUûÑÞÿ&úÅ»ž@É`↑
   <b>StyleSheet</b>  ▬   <b>UnityEngine.UIElements</b>      <b>UnityEngine.UIElementsModule.dll</b>    •   GUISkin     $ðn{Ì±♦qÉÞ™:”2Jï•   GUISkin ♂   <b>UnityEngine</b> ←   <b>UnityEngine.IMGUIModule.dll</b>     ♦   Tile    Ï‼ƒƒaLF,i4↕•èM§♀♦   <b>Tile</b>¶   <b>UnityEngine.Tilemaps</b>↔   <b>UnityEngine.TilemapModule.dll</b>   ◘   TileBase                    ◘   <b>TileBase</b>¶   <b>UnityEngine.Tilemaps</b>↔   <b>UnityEngine.TilemapModule.dll</b>   ♀   <b>TextSettings</b>    -0 ±Kç←ÙÚð↑k£←–-♀   <b>TextSettings</b>¶   <b>UnityEngine.TextCore</b>▲   <b>UnityEngine.TextCoreModule.dll</b>  	   FontAsset       ~;ÀIËq‡)¶/( üjy•	   FontAsset   ¶   <b>UnityEngine.TextCore</b>▲   <b>UnityEngine.TextCoreModule.dll</b>  ☼   <b>TextSpriteAsset</b>     [ª•y /² ,û3+¤&®G☼   <b>TextSpriteAsset</b> ¶   <b>UnityEngine.TextCore</b>▲   <b>UnityEngine.TextCoreModule.dll</b>  ↕   <b>TextGradientPreset</b>      1e–‹¤\tG-'› DUüË↕   <b>TextGradientPreset</b>  ¶   <b>UnityEngine.TextCore</b>▲   <b>UnityEngine.TextCoreModule.dll</b>  ♫   <b>TextStyleSheet</b>      ¨ æâ2◄♂6↨æ"‘âM4£♫   <b>TextStyleSheet</b>  ¶   <b>UnityEngine.TextCore</b>▲   <b>UnityEngine.TextCoreModule.dll</b>  ♂   <b>VectorImage</b>     )é:ã™ &î÷¡▲•y}÷a♂   <b>VectorImage</b> ▬   <b>UnityEngine.UIElements</b>      <b>UnityEngine.UIElementsModule.dll</b>            ☺   ☺   §   ◘   $Globals    ¶   <b>STEREO_INSTANCING_ON</b>◄   ‼   <b>STEREO_MULTIVIEW_ON</b> ¶   ↑   <b>UNITY_SINGLE_PASS_STEREO</b>♥   ‼   <b>UnityStereoEyeIndex</b> ♣   §   <b>UnityStereoEyeIndices</b>   ↕   ↕   <b>UnityStereoGlobals</b>  ♦   ♫   <b>unity_MatrixVP</b>  ☻   ‼   <b>unity_ObjectToWorld</b> ☺   ▼   <b>unity_StereoCameraInvProjection</b> 
  ∟   <b>unity_StereoCameraProjection</b>♀   ↓   <b>unity_StereoCameraToWorld</b>   ☼   ¶   <b>unity_StereoEyeIndex</b>►   ▬   <b>unity_StereoEyeIndices</b>  ‼   ▬   <b>unity_StereoMatrixInvV</b>  
   ‼   <b>unity_StereoMatrixP</b> ◘   ‼   <b>unity_StereoMatrixV</b> 	   ¶   <b>unity_StereoMatrixVP</b>♂   ↨   <b>unity_StereoScaleOffset</b> •   ▼   <b>unity_StereoWorldSpaceCameraPos</b> ♠   ↓   <b>unity_StereoWorldToCamera</b>   ♫             €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>         €?	   <noninit>     €@	   <noninit>     €?	   <noninit>      @	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>     C	   <noninit>     C	   <noninit>       	   <noninit>       ♫   <b>unity_FogStart</b>      ♀   <b>unity_FogEnd</b>    ►   <b>unity_FogDensity</b>    	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>   ♫   <b>unity_FogColor</b>  ÿÿÿÿµH              ♠   ♠           ☺           ♥♣                                  ☺           ☺           ♥♦                  ☺       ☻   ☺            ♦  ☻   @        ♦          €               ☺   ☺       ☺   ☺   ♥       ♥♣                                  ☺   ☺       ☺   ☺   ♥       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ♣       ☺   ►           ♣☺      ♦   ☻   ♦       ♣   ☺           ☺   ☻       ☺   ☺   ◄       ♥♦                  ☻       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ☺   ♦               ë♫  ♥       ☺   ☺   ¶       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ↕       ☺   ‼       ☻    ♦          ☻   ♦       ↕   ☺           ë♫  ♠   ☻                   ♥♣                                  ☺   ♦                   ♥♦                                  ☺   ♥           ☺   ♥       ♥♣                                  ☺   ♣           ☺   ♥       ♥♦                                  ☺   ♠           ☺   ◄       ♥♦                                  ë♫  •           ☺   ¶       ♥♦                                  ë♫                                              →   <b>Hidden/InternalErrorShader</b>              ☺   ☻   ♣   	   ☻   ☺       ☺   ‰♥  ☻   ☺   ‰♥  ☺   R•  ☻   ☺   (♀  ☺   x/  Û
  ±♦   4   l♦ ☺ b ♦  ä♠♀ R„♂  D♂ c È♂  `♀ o<Q•♀♣ ☺ •ÿC'♦  <b>#ifdef VERTEX</b>
<b>#version 100</b>

<b>uniform </b>	<b>vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];3</b> ☼ <b>MatrixVP.</b> ñ☺<b>attribute highp 5</b> á<b>in_POSITION0;</b>
‼ <b>ju_xlat</b>♫ ô♣1;
<b>void main()</b>
{
   ) ) =F .yyyy *Â ☼;1];G ☼3 ♫J0] *m fxxxx +´ ☼Q ∟↔2Q OzzzzQ •♦
 ▼+[ ☼↓3ß ▬1= ♫!☺♫°☺↔1= ☼. 	☺↨☺♦^ 	↕☺▼1G ↓↑2G 	◘☺♥G €gl_Posit´☻☼K ♂↑3K <b>LwwwwK</b> ó♥<b>return;</b>
}

<b>#endif</b>
∟♥‹<b>FRAGMENT</b>▲♥♥▲ 4GL_! ñ <b>_PRECISION_HIGHV</b> <b>Qpreci5</b> ☻ã☻Ëfloat;
#else! gmedium# ☺… ♀A  in∟ ð☻<b>define SV_Target0</b>
☺¿<b>FragData[0]</b>∟♥ •, ◄=j♥p(1.0, 0♣ ‼1♣ ▼)♂☺♣# ☺4♦▲☺L♦☼l♦
 0 ð
↑   <b>UNITY_SINGLE_PASS_STEREO$</b> /ƒ♠ˆ♦_eStereo▲☻↑84 Hint &  EyeIndex±♦ ☺K ☺
)i1∟ ↕2∟ pop_shl(♂  a,Ü☺S b) { ☺ ► q(floor(¶☻°(a) * pow(2°☺☻¶ åb)))); }
ivec2Q ☺
 S ☺	 ☺U Ta.x =! èa.x, b.x); a.y↑ ►y↑ 4y);… ¶a] ↑3] ¶3] ▼3] #8a.z↑ ►z↑ ▼zu  ↑4u ¶4u ▼4u ;8a.w↑ ►w↑ ←w  ☼n♠ÿ-&i1b☺☼\♥☺H, 2)0 ▼2ž♠↕♂Æ♥§(l \+ 1)]P ☼A ☼♦@ ☼¾♠♠▼2T ▼◘• /2)Ñ♠♠▲2Ñ♠☼^ ↔/3)ä♠♠▼2ä♠ÿJ♫☺ ☼(•C☼` ♀P     ±◘   d   ,♠ ☺ b ♠  Ì♀♀ b\‼  ↑
♀ St   ¨♀ R∟.  D♂ c `.  `♀ SÀ.  \♀ &∟/♀ o<Q•♀♦ ☺ •ÿ?r♣  <b>#ifdef VERTEX</b>
<b>#version 300 es</b>

<b>#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1</b>
#if$ ♂♣J TUNITY▲ o
#else∟ ♥û  uniform
#endif% …<b>SUPPORTSh</b> ƒ<b>LOCATION</b>  ☼& ♀♂N ♦↨ ð☺<b>(x) layout(locat</b>♂☺K= x)/ <b>wBINDING.</b> <b>pbinding-</b> ž<b>, std140)</b>Ý 
j ☼U ♫♠H ☺☺☺♥►☺ÿ∟ 	<b>vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];3</b> ☼ <b>MatrixVP.</b> ‘<b>in highp .</b> <b>pin_POSI</b>­ 10;
‼ ju_xlat♫ ô♣1;
<b>void main()</b>
{
   ) ) =F .yyyy *» ☼;1];G ☼3 ♫J0] *m fxxxx +´ ☼Q ∟↔2Q OzzzzQ •♦
 ▼+[ ☼↓3ß ▬1= ♫!☺♫©☺↔1= ☼. 	☺↨☺♦^ 	↕☺▼1G ↓↑2G 	◘☺♥G sgl_Posi1♥☼K 	↑3K <b>LwwwwK</b> ¥<b>return;</b>
}
ú♥☻¤♦Ž<b>FRAGMENT</b>¦♦<b>Qpreci</b>↕ ☻À☻mfloat;↨ ^int;
ß♥Ó<b>0) out medium</b>ý☻¯<b>SV_Target0</b>ß☻☺♠▲ ! =0 p(1.0, 0♣ ‼1♣ ▼)Î ♣3  ☺€♣▼☻”♣  ↑♠“$Globals€$ O‼   H☻ ☺0 ‼♦♦ ↨☺D §♫0 ♦v☺▼ , ☻↨@4 ☼,♠♣ , C↑   P♣ð☻<b>INGLE_PASS_STEREO$</b> /L	H♠ÿÎ☼—☺☼
| $0)v☺  US cStereo×☻$ {Š →	©☺☼  ♣☻> ☻Ì☻_P[8];9 !▼V9 %?Inv< &▼V¯   CameraPro…☺?ionB %?InvE )☺ý☺‼TL ☼„ %♦D☻☼? ♥-3 q <b>SSpace</b>☻☺<b>Oos[2w</b> ♦◘8 ß<b>ScaleOffset[2</b>¬☻↕'};Z♠☼Ø☻→▼1Ø☻☻ <b>EyeIndex</b>Ù☻♠<b>9int</b>³ ♦1 ☼­ ←☼Ÿ	↨☺p ☺
)i1∟ ▼2­	ÿ.!i1'☺/t(Ï☺☺h << 2)/ ▼2Ü	↕♂2♦§(k \+ 1)]P ☼A ☼♦@ ☼ü	♠▼2T ▼◘• /2)☼
♠▲2☼
☼^ ↔/3)"
♠▼2"
Ó♦ 	▼♦ 
♀‼@ 	☼ 
↔ ☺ ►↕Ô	
›•µ  @♦  
   ▼T ☼ž♣♠♣ 
↑♥Ð
K♦  ↨< •¢♣♣4 ↨♦4 ( ♦Ä 	î•
Ä ♦4♂☼0 ♥▼V0 ☻ H♂▲▬0 ♥Ü•▼ d ♥O☺  ¶d ♥▼Pd ☻K☺  ∟0 ♀Ê•☼h ☻▲☻l☺☼À• ☼Ø ♥N☻  ↓¨☺♠·•▼ Ü ♦▲♥8 	°•☼8 ♦&€♥|☺☼ÿ♠ ♣, ♀8☺♦ ♣‼♣  ▼☺Ø☻ ▼☻”☻◘◘0 ☼| ♣◘X ☼Ì♀	 œ ☻º♀à<b>_INSTANCING_ON </b> /◄
È♀
<b>a#exten</b>↕ ÿ§<b>GL_AMD_vertex_shader_layer : require</b>ø♀ÿÿÿÿŠ☼K♀	Aflatï◘☻" ►uM♀`vs_BLEä☻QDICES& 6oat_♂▬us♀▲u ▬	 ♀• ♀▼3 ♀♂☺d ►([ ÿ☺<b>(gl_InstanceID))</b>Ð♂♣\* 0.5↔ Sfractb
/0)♂♀•☼,♀♦Ÿ<b>roundEvenC</b> ☻◄uD /ina ♥#i3/♀♠! >u0)(♀▼1}
3▼1}
0♫↑▬☼}
,▼1í▬♥▼1}
▼♠N
▼1N
▼▼3N
,•¸▬▼1N
6←3N
▼1N
:←3N
▼1N
☻♀Ü♥' =É♥♥ ◄LØ◘)= Ç☻☼¯↨Õ♣X
▼♥ 
ÿÿ†▼☺<
¶☼↑
	▬‼↑
“MULTIVIEW↨
/  ↑
∟î<b>OVR_multiview2</b>☼
☼•→ÿÿÿÿÎ>iceÛ☻☼¶ ♠♠4 ☼µ ▲♥Ö♥@num_h♣Ÿs = 2) inÈ#♂♠Ù
☻Â
♦Ú
mWEIGHTJ→♂Ø
☼Y→ÿQ♥î♫`ViewIDK•▼)W→ÿV•Ñ☼	 ☺
'
♥)♥/ =È♥♣	$
?].x´→ÿÿÿv▲§8→☻¬• Ì☺♥0 ♀p☺	% ♫♦☻☼¼→▲☼„ 	♫À→☼☺ ‼♫L←☼Ð'+☼` 1☼d←♣☼\ 1☼¨♫♦☼↑☺◄P              ☺               ☺   ◘   §   ◘   $Globals    ¶   <b>STEREO_INSTANCING_ON</b>◄   ‼   <b>STEREO_MULTIVIEW_ON</b> ¶   ↑   <b>UNITY_SINGLE_PASS_STEREO</b>♥   ‼   <b>UnityStereoEyeIndex</b> ♣   §   <b>UnityStereoEyeIndices</b>   ↕   ↕   <b>UnityStereoGlobals</b>  ♦   ♫   <b>unity_MatrixVP</b>  ☻   ‼   <b>unity_ObjectToWorld</b> ☺   ▼   <b>unity_StereoCameraInvProjection</b> 
  ∟   <b>unity_StereoCameraProjection</b>♀   ↓   <b>unity_StereoCameraToWorld</b>   ☼   ¶   <b>unity_StereoEyeIndex</b>►   ▬   <b>unity_StereoEyeIndices</b>  ‼   ▬   <b>unity_StereoMatrixInvV</b>  
   ‼   <b>unity_StereoMatrixP</b> ◘   ‼   <b>unity_StereoMatrixV</b> 	   ¶   <b>unity_StereoMatrixVP</b>♂   ↨   <b>unity_StereoScaleOffset</b> •   ▼   <b>unity_StereoWorldSpaceCameraPos</b> ♠   ↓   <b>unity_StereoWorldToCamera</b>   ♫             €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>         €?	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>     C	   <noninit>     C	   <noninit>       	   <noninit>       ♫   <b>unity_FogStart</b>      ♀   <b>unity_FogEnd</b>    ►   <b>unity_FogDensity</b>    	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>   ♫   <b>unity_FogColor</b>  ÿÿÿÿÓž              ♠   ♠           	           ♥♣                                  ☺           	           ♥♦                  ☺       ☻   ☺            ♦  ☻   @        ♦          €               ☺   ☺       	   ☺   ♥       ♥♣                                  ☺   ☺       	   ☺   ♥       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ♣       ☺   ►           ♣☺      ♦   ☻   ♦       ♣   ☺           ☺   ☻       	   ☺   ◄       ♥♦                  ☻       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ☺   ♦               ë♫  ♥       	   ☺   ¶       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ↕       ☺   ‼       ☻    ♦          ☻   ♦       ↕   ☺           ë♫  ♠   ☻                   ♥♣                                  ☺   ♦                   ♥♦                                  ☺   ♥           ☺   ♥       ♥♣                                  ☺   ♣           ☺   ♥       ♥♦                                  ☺   ♠           ☺   ◄       ♥♦                                  ë♫  •           ☺   ¶       ♥♦                                  ë♫                                      §   ◘   $Globals    ¶   <b>STEREO_INSTANCING_ON</b>◄   ‼   <b>STEREO_MULTIVIEW_ON</b> ¶   ↑   <b>UNITY_SINGLE_PASS_STEREO</b>♥   ‼   <b>UnityStereoEyeIndex</b> ♣   §   <b>UnityStereoEyeIndices</b>   ↕   ↕   <b>UnityStereoGlobals</b>  ♦   ♫   <b>unity_MatrixVP</b>  ☻   ‼   <b>unity_ObjectToWorld</b> ☺   ▼   <b>unity_StereoCameraInvProjection</b> 
  ∟   <b>unity_StereoCameraProjection</b>♀   ↓   <b>unity_StereoCameraToWorld</b>   ☼   ¶   <b>unity_StereoEyeIndex</b>►   ▬   <b>unity_StereoEyeIndices</b>  ‼   ▬   <b>unity_StereoMatrixInvV</b>  
   ‼   <b>unity_StereoMatrixP</b> ◘   ‼   <b>unity_StereoMatrixV</b> 	   ¶   <b>unity_StereoMatrixVP</b>♂   ↨   <b>unity_StereoScaleOffset</b> •   ▼   <b>unity_StereoWorldSpaceCameraPos</b> ♠   ↓   <b>unity_StereoWorldToCamera</b>   ♫             €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>         €?	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>     C	   <noninit>     C	   <noninit>       	   <noninit>       ♫   <b>unity_FogStart</b>      ♀   <b>unity_FogEnd</b>    ►   <b>unity_FogDensity</b>    	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>   ♫   <b>unity_FogColor</b>  ÿÿÿÿÈº☺             ♠   ♠           	           ♥♣                                  ☺           	           ♥♦                  ☺       ☻   ☺            ♦  ☻   @        ♦          €               ☺   ☺       	   ☺   ♥       ♥♣                                  ☺   ☺       	   ☺   ♥       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ♣       ☺   ►           ♣☺      ♦   ☻   ♦       ♣   ☺           ☺   ☻       	   ☺   ◄       ♥♦                  ☻       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ☺   ♦               ë♫  ♥       	   ☺   ¶       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ↕       ☺   ‼       ☻    ♦          ☻   ♦       ↕   ☺           ë♫  ♠   ☻                   ♥♣                                  ☺   ♦                   ♥♦                                  ☺   ♥           ☺   ♥       ♥♣                                  ☺   ♣           ☺   ♥       ♥♦                                  ☺   ♠           ☺   ◄       ♥♦                                  ë♫  •           ☺   ¶       ♥♦                                  ë♫                                      §   ◘   $Globals    ¶   <b>STEREO_INSTANCING_ON</b>◄   ‼   <b>STEREO_MULTIVIEW_ON</b> ¶   ↑   <b>UNITY_SINGLE_PASS_STEREO</b>♥   ‼   <b>UnityStereoEyeIndex</b> ♣   §   <b>UnityStereoEyeIndices</b>   ↕   ↕   <b>UnityStereoGlobals</b>  ♦   ♫   <b>unity_MatrixVP</b>  ☻   ‼   <b>unity_ObjectToWorld</b> ☺   ▼   <b>unity_StereoCameraInvProjection</b> 
  ∟   <b>unity_StereoCameraProjection</b>♀   ↓   <b>unity_StereoCameraToWorld</b>   ☼   ¶   <b>unity_StereoEyeIndex</b>►   ▬   <b>unity_StereoEyeIndices</b>  ‼   ▬   <b>unity_StereoMatrixInvV</b>  
   ‼   <b>unity_StereoMatrixP</b> ◘   ‼   <b>unity_StereoMatrixV</b> 	   ¶   <b>unity_StereoMatrixVP</b>♂   ↨   <b>unity_StereoScaleOffset</b> •   ▼   <b>unity_StereoWorldSpaceCameraPos</b> ♠   ↓   <b>unity_StereoWorldToCamera</b>   ♫             €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>         €?	   <noninit>      A	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>     C	   <noninit>     C	   <noninit>       	   <noninit>       ♫   <b>unity_FogStart</b>      ♀   <b>unity_FogEnd</b>    ►   <b>unity_FogDensity</b>    	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>   ♫   <b>unity_FogColor</b>  ÿÿÿÿnÔ☻             ♠   ♠           	           ♥♣                                  ☺           	           ♥♦                  ☺       ☻   ☺            ♦  ☻   @        ♦          €               ☺   ☺       	   ☺   ♥       ♥♣                                  ☺   ☺       	   ☺   ♥       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ♣       ☺   ►           ♣☺      ♦   ☻   ♦       ♣   ☺           ☺   ☻       	   ☺   ◄       ♥♦                  ☻       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ☺   ♦               ë♫  ♥       	   ☺   ¶       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ↕       ☺   ‼       ☻    ♦          ☻   ♦       ↕   ☺           ë♫  ♠   ☻                   ♥♣                                  ☺   ♦                   ♥♦                                  ☺   ♥           ☺   ♥       ♥♣                                  ☺   ♣           ☺   ♥       ♥♦                                  ☺   ♠           ☺   ◄       ♥♦                                  ë♫  •           ☺   ¶       ♥♦                                  ë♫                                      §   ◘   $Globals    ¶   <b>STEREO_INSTANCING_ON</b>◄   ‼   <b>STEREO_MULTIVIEW_ON</b> ¶   ↑   <b>UNITY_SINGLE_PASS_STEREO</b>♥   ‼   <b>UnityStereoEyeIndex</b> ♣   §   <b>UnityStereoEyeIndices</b>   ↕   ↕   <b>UnityStereoGlobals</b>  ♦   ♫   <b>unity_MatrixVP</b>  ☻   ‼   <b>unity_ObjectToWorld</b> ☺   ▼   <b>unity_StereoCameraInvProjection</b> 
  ∟   <b>unity_StereoCameraProjection</b>♀   ↓   <b>unity_StereoCameraToWorld</b>   ☼   ¶   <b>unity_StereoEyeIndex</b>►   ▬   <b>unity_StereoEyeIndices</b>  ‼   ▬   <b>unity_StereoMatrixInvV</b>  
   ‼   <b>unity_StereoMatrixP</b> ◘   ‼   <b>unity_StereoMatrixV</b> 	   ¶   <b>unity_StereoMatrixVP</b>♂   ↨   <b>unity_StereoScaleOffset</b> •   ▼   <b>unity_StereoWorldSpaceCameraPos</b> ♠   ↓   <b>unity_StereoWorldToCamera</b>   ♫             €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>         €?	   <noninit>      A	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>     C	   <noninit>     C	   <noninit>       	   <noninit>       ♫   <b>unity_FogStart</b>      ♀   <b>unity_FogEnd</b>    ►   <b>unity_FogDensity</b>    	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>   ♫   <b>unity_FogColor</b>  ÿÿÿÿ·§♥             ♠   ♠           	           ♥♣                                  ☺           	           ♥♦                  ☺       ☻   ☺            ♦  ☻   @        ♦          €               ☺   ☺       	   ☺   ♥       ♥♣                                  ☺   ☺       	   ☺   ♥       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ♣       ☺   ►           ♣☺      ♦   ☻   ♦       ♣   ☺           ☺   ☻       	   ☺   ◄       ♥♦                  ☻       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ☺   ♦               ë♫  ♥       	   ☺   ¶       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ↕       ☺   ‼       ☻    ♦          ☻   ♦       ↕   ☺           ë♫  ♠   ☻                   ♥♣                                  ☺   ♦                   ♥♦                                  ☺   ♥           ☺   ♥       ♥♣                                  ☺   ♣           ☺   ♥       ♥♦                                  ☺   ♠           ☺   ◄       ♥♦                                  ë♫  •           ☺   ¶       ♥♦                                  ë♫                                      §   ◘   $Globals    ¶   <b>STEREO_INSTANCING_ON</b>◄   ‼   <b>STEREO_MULTIVIEW_ON</b> ¶   ↑   <b>UNITY_SINGLE_PASS_STEREO</b>♥   ‼   <b>UnityStereoEyeIndex</b> ♣   §   <b>UnityStereoEyeIndices</b>   ↕   ↕   <b>UnityStereoGlobals</b>  ♦   ♫   <b>unity_MatrixVP</b>  ☻   ‼   <b>unity_ObjectToWorld</b> ☺   ▼   <b>unity_StereoCameraInvProjection</b> 
  ∟   <b>unity_StereoCameraProjection</b>♀   ↓   <b>unity_StereoCameraToWorld</b>   ☼   ¶   <b>unity_StereoEyeIndex</b>►   ▬   <b>unity_StereoEyeIndices</b>  ‼   ▬   <b>unity_StereoMatrixInvV</b>  
   ‼   <b>unity_StereoMatrixP</b> ◘   ‼   <b>unity_StereoMatrixV</b> 	   ¶   <b>unity_StereoMatrixVP</b>♂   ↨   <b>unity_StereoScaleOffset</b> •   ▼   <b>unity_StereoWorldSpaceCameraPos</b> ♠   ↓   <b>unity_StereoWorldToCamera</b>   ♫             €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>         €?	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>     C	   <noninit>     C	   <noninit>       	   <noninit>       ♫   <b>unity_FogStart</b>      ♀   <b>unity_FogEnd</b>    ►   <b>unity_FogDensity</b>    	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>   ♫   <b>unity_FogColor</b>  ÿÿÿÿ}'♦             ♠   ♠           	           ♥♣                                  ☺           	           ♥♦                  ☺       ☻   ☺            ♦  ☻   @        ♦          €               ☺   ☺       	   ☺   ♥       ♥♣                                  ☺   ☺       	   ☺   ♥       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ♣       ☺   ►           ♣☺      ♦   ☻   ♦       ♣   ☺           ☺   ☻       	   ☺   ◄       ♥♦                  ☻       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ☺   ♦               ë♫  ♥       	   ☺   ¶       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ↕       ☺   ‼       ☻    ♦          ☻   ♦       ↕   ☺           ë♫  ♠   ☻                   ♥♣                                  ☺   ♦                   ♥♦                                  ☺   ♥           ☺   ♥       ♥♣                                  ☺   ♣           ☺   ♥       ♥♦                                  ☺   ♠           ☺   ◄       ♥♦                                  ë♫  •           ☺   ¶       ♥♦                                  ë♫                                      §   ◘   $Globals    ¶   <b>STEREO_INSTANCING_ON</b>◄   ‼   <b>STEREO_MULTIVIEW_ON</b> ¶   ↑   <b>UNITY_SINGLE_PASS_STEREO</b>♥   ‼   <b>UnityStereoEyeIndex</b> ♣   §   <b>UnityStereoEyeIndices</b>   ↕   ↕   <b>UnityStereoGlobals</b>  ♦   ♫   <b>unity_MatrixVP</b>  ☻   ‼   <b>unity_ObjectToWorld</b> ☺   ▼   <b>unity_StereoCameraInvProjection</b> 
  ∟   <b>unity_StereoCameraProjection</b>♀   ↓   <b>unity_StereoCameraToWorld</b>   ☼   ¶   <b>unity_StereoEyeIndex</b>►   ▬   <b>unity_StereoEyeIndices</b>  ‼   ▬   <b>unity_StereoMatrixInvV</b>  
   ‼   <b>unity_StereoMatrixP</b> ◘   ‼   <b>unity_StereoMatrixV</b> 	   ¶   <b>unity_StereoMatrixVP</b>♂   ↨   <b>unity_StereoScaleOffset</b> •   ▼   <b>unity_StereoWorldSpaceCameraPos</b> ♠   ↓   <b>unity_StereoWorldToCamera</b>   ♫             €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>         €?	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>     C	   <noninit>     C	   <noninit>       	   <noninit>       ♫   <b>unity_FogStart</b>      ♀   <b>unity_FogEnd</b>    ►   <b>unity_FogDensity</b>    	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>   ♫   <b>unity_FogColor</b>  ÿÿÿÿ}H♣             ♠   ♠           	           ♥♣                                  ☺           	           ♥♦                  ☺       ☻   ☺            ♦  ☻   @        ♦          €               ☺   ☺       	   ☺   ♥       ♥♣                                  ☺   ☺       	   ☺   ♥       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ♣       ☺   ►           ♣☺      ♦   ☻   ♦       ♣   ☺           ☺   ☻       	   ☺   ◄       ♥♦                  ☻       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ☺   ♦               ë♫  ♥       	   ☺   ¶       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ↕       ☺   ‼       ☻    ♦          ☻   ♦       ↕   ☺           ë♫  ♠   ☻                   ♥♣                                  ☺   ♦                   ♥♦                                  ☺   ♥           ☺   ♥       ♥♣                                  ☺   ♣           ☺   ♥       ♥♦                                  ☺   ♠           ☺   ◄       ♥♦                                  ë♫  •           ☺   ¶       ♥♦                                  ë♫                                      §   ◘   $Globals    ¶   <b>STEREO_INSTANCING_ON</b>◄   ‼   <b>STEREO_MULTIVIEW_ON</b> ¶   ↑   <b>UNITY_SINGLE_PASS_STEREO</b>♥   ‼   <b>UnityStereoEyeIndex</b> ♣   §   <b>UnityStereoEyeIndices</b>   ↕   ↕   <b>UnityStereoGlobals</b>  ♦   ♫   <b>unity_MatrixVP</b>  ☻   ‼   <b>unity_ObjectToWorld</b> ☺   ▼   <b>unity_StereoCameraInvProjection</b> 
  ∟   <b>unity_StereoCameraProjection</b>♀   ↓   <b>unity_StereoCameraToWorld</b>   ☼   ¶   <b>unity_StereoEyeIndex</b>►   ▬   <b>unity_StereoEyeIndices</b>  ‼   ▬   <b>unity_StereoMatrixInvV</b>  
   ‼   <b>unity_StereoMatrixP</b> ◘   ‼   <b>unity_StereoMatrixV</b> 	   ¶   <b>unity_StereoMatrixVP</b>♂   ↨   <b>unity_StereoScaleOffset</b> •   ▼   <b>unity_StereoWorldSpaceCameraPos</b> ♠   ↓   <b>unity_StereoWorldToCamera</b>   ♫             €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>         €?	   <noninit>      A	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>     C	   <noninit>     C	   <noninit>       	   <noninit>       ♫   <b>unity_FogStart</b>      ♀   <b>unity_FogEnd</b>    ►   <b>unity_FogDensity</b>    	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>   ♫   <b>unity_FogColor</b>  ÿÿÿÿ♂Ò♠             ♠   ♠           	           ♥♣                                  ☺           	           ♥♦                  ☺       ☻   ☺            ♦  ☻   @        ♦          €               ☺   ☺       	   ☺   ♥       ♥♣                                  ☺   ☺       	   ☺   ♥       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ♣       ☺   ►           ♣☺      ♦   ☻   ♦       ♣   ☺           ☺   ☻       	   ☺   ◄       ♥♦                  ☻       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ☺   ♦               ë♫  ♥       	   ☺   ¶       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ↕       ☺   ‼       ☻    ♦          ☻   ♦       ↕   ☺           ë♫  ♠   ☻                   ♥♣                                  ☺   ♦                   ♥♦                                  ☺   ♥           ☺   ♥       ♥♣                                  ☺   ♣           ☺   ♥       ♥♦                                  ☺   ♠           ☺   ◄       ♥♦                                  ë♫  •           ☺   ¶       ♥♦                                  ë♫                                      §   ◘   $Globals    ¶   <b>STEREO_INSTANCING_ON</b>◄   ‼   <b>STEREO_MULTIVIEW_ON</b> ¶   ↑   <b>UNITY_SINGLE_PASS_STEREO</b>♥   ‼   <b>UnityStereoEyeIndex</b> ♣   §   <b>UnityStereoEyeIndices</b>   ↕   ↕   <b>UnityStereoGlobals</b>  ♦   ♫   <b>unity_MatrixVP</b>  ☻   ‼   <b>unity_ObjectToWorld</b> ☺   ▼   <b>unity_StereoCameraInvProjection</b> 
  ∟   <b>unity_StereoCameraProjection</b>♀   ↓   <b>unity_StereoCameraToWorld</b>   ☼   ¶   <b>unity_StereoEyeIndex</b>►   ▬   <b>unity_StereoEyeIndices</b>  ‼   ▬   <b>unity_StereoMatrixInvV</b>  
   ‼   <b>unity_StereoMatrixP</b> ◘   ‼   <b>unity_StereoMatrixV</b> 	   ¶   <b>unity_StereoMatrixVP</b>♂   ↨   <b>unity_StereoScaleOffset</b> •   ▼   <b>unity_StereoWorldSpaceCameraPos</b> ♠   ↓   <b>unity_StereoWorldToCamera</b>   ♫             €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>         €?	   <noninit>      A	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>     C	   <noninit>     C	   <noninit>       	   <noninit>       ♫   <b>unity_FogStart</b>      ♀   <b>unity_FogEnd</b>    ►   <b>unity_FogDensity</b>    	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>   ♫   <b>unity_FogColor</b>  ÿÿÿÿpæ•             ♠   ♠           	           ♥♣                                  ☺           	           ♥♦                  ☺       ☻   ☺            ♦  ☻   @        ♦          €               ☺   ☺       	   ☺   ♥       ♥♣                                  ☺   ☺       	   ☺   ♥       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ♣       ☺   ►           ♣☺      ♦   ☻   ♦       ♣   ☺           ☺   ☻       	   ☺   ◄       ♥♦                  ☻       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ☺   ♦               ë♫  ♥       	   ☺   ¶       ♥♦                  ♥       ☺   ☺            ♦          @   ♦   ◘   ◘       ☻    ♦  	   €   ☻    ♦  
    ☺  ☻    ♦  ♂   €☺  ☻    ♦  ♀    ☻  ☻    ♦  
  €☻  ☻    ♦  ♫    ♥  ☻    ♦  ☼   €♥  ☻    ♦  ☻   ♠    ♦  ☻    ♥  •    ♦  ☻    ♦      @♦  ↕       ☺   ‼       ☻    ♦          ☻   ♦       ↕   ☺           ë♫  ♠   ☻                   ♥♣                                  ☺   ♦                   ♥♦                                  ☺   ♥           ☺   ♥       ♥♣                                  ☺   ♣           ☺   ♥       ♥♦                                  ☺   ♠           ☺   ◄       ♥♦                                  ë♫  •           ☺   ¶       ♥♦                                  ë♫                                              ¶   <b>Hidden/InternalClear</b>            ☺   ☻   ♣   	   ☻   ☺       ☺   «♥  ☻   ☺   «♥  ☺   b•  ☻   ☺   ◘
 ☺   ð0  
♂  ±♦   4   Ü♦ ☺ b►♣  T•♀ Rd♀  D♂ c ¨♀  `♀ o<Q•♀♣ ☺ •ÿC•♦  <b>#ifdef VERTEX</b>
<b>#version 100</b>

<b>uniform </b>	<b>vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];3</b> ☼ <b>MatrixVP.</b> ñ☺<b>attribute highp 5</b> È<b>in_POSITION0#</b> <b>fmedium%</b> ú <b>COLOR0;</b>
<b>varying </b> &vs   ► ju_xlat♫ ô♣1;
<b>void main()</b>
{
   ) ) =ˆ .yyyy *♦☺☼;1];G ☼3 ♫J0] *m fxxxx +´ ☼Q ∟↔2Q OzzzzQ •♦
 ▼+[ ☼↓3ß ▬1= ♫!☺♫ò☺↔1= ☼. 	☺↨☺♦^ 	↕☺▼1G ↓↑2G 	◘☺♥G €gl_Positö☻☼K ♂↑3K LwwwwK ♣u☻( =¡☻ ← ó♥return;
}

#endif
y♥‹FRAGMENT{♥♥▲ 4GL_! ñ <b>_PRECISION_HIGHV</b> <b>Qpreci5</b> ☻@♥Ëfloat;
#else! ♦▲♥♣# ☺… ♀A ?intQ♥☼ð♥<b>#define SV_Target0E</b>☺¿<b>FragData[0]W</b>♥ •, ↑=L ☼∟☺♥C   	¤♦▲☺¼♦☼Ü♦
 0 ð
↑   <b>UNITY_SINGLE_PASS_STEREO$</b> /ñ♠ø♦_eStereoL☻↑84 Hint &  EyeIndex!♣b☺  ☺
)i1∟ ↕2∟ pop_shl(♂  a,1☻S b) {Å☺ ► q(floor(i☻â(a) * pow(2.0,}☻õ (b)))); }
ivec2Q ☺
 S ☺	 ☺U Ta.x =! èa.x, b.x); a.y↑ ►y↑ 4y);… ¶a] ↑3] ¶3] ▼3] #8a.z↑ ►z↑ ▼zu  ↑4u ¶4u ▼4u ;8a.w↑ ►w↑ ←w  ☼Þ♠ÿ-&i1b☺☼ž♥☺H, 2)0 ▼2♫•↕♂◘♦§(l \+ 1)]P ☼A ☼♦@ ☼.•♠▼2T ▼◘• /2)A•♠▲2A•☼^ ↔/3)T•♠▼2T•ÿx♫☺ ☼˜•C☼` ♀P     ±◘   d   ˆ♠ ☺ bì♠  ,
♀ S↑¶  t♀ bŒ!  ◘♫♀ R”/  D♂ c Ø/  `♀ S80  \♀ ↨”♀ o<Q•♀♦ ☺ •ÿ?Ð♣  <b>#ifdef VERTEX</b>
<b>#version 300 es</b>

<b>#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1</b>
#if$ ♂♣J TUNITY▲ o
#else∟ ♥û  uniform
#endif% …<b>SUPPORTSh</b> ƒ<b>LOCATION</b>  ☼& ♀♂N ♦↨ ð☺<b>(x) layout(locat</b>♂☺K= x)/ <b>wBINDING.</b> <b>pbinding-</b> ž<b>, std140)</b>Ý 
j ☼U ♫♠H ☺☺☺♥►☺ÿ∟ 	<b>vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];3</b> ☼ <b>MatrixVP.</b> ‘<b>in highp .</b> <b>pin_POSI</b>­ ◄0∟ <b>fmedium</b>▲ º<b>COLOR0;</b>
out∟ %vs∟ ☺► ju_xlat♫ ô♣1;
<b>void main()</b>
{
   ) ) =} .yyyy *ò ☼;1];G ☼3 ♫J0] *m fxxxx +´ ☼Q ∟↔2Q OzzzzQ •♦
 ▼+[ ☼↓3ß ▬1= ♫!☺♫à☺↔1= ☼. 	☺↨☺♦^ 	↕☺▼1G ↓↑2G 	◘☺♥G sgl_Posih♥☼K 	↑3K LwwwwK ♣u☻( = ☻ ← ¥return;
}
L♦☻ö♦Ž<b>FRAGMENT</b>ø♦<b>Qpreci</b>↕ ☻↕♥mfloat;↨ >int←♥•ÿ☻♫L♦=0) 0♥¯<b>SV_Target0</b>§♥☺♠▲ ( =\ ☼Ú ♥‼	Ü♣▼☻ð♣  t♠“$Globals€$ O‼   m☻ ☺0 ‼♦♦ ↨☺D  ‹♠
›☺▼ , ☻↨@4 ☼ˆ♠♣ , C↑   ¬♣ð☻<b>INGLE_PASS_STEREO$</b> /ª	¤♠ÿÎ☼—☺☼
| $0)v☺  US cStereo×☻% {	♥
©☺☼  ♣☻> ☻Ì☻_P[8];9 !▼V9 %?Inv< &▼V¯   CameraPro…☺?ionB %?InvE )☺ý☺‼TL ☼„ %♦D☻☼? ♥-3 q <b>SSpace</b>☻☺<b>Oos[2w</b> ♦◘8 ß<b>ScaleOffset[2</b>¬☻↕'};d♠☼Ø☻→▼1Ø☻☻ <b>EyeIndex</b>Ù☻♠<b>9int</b>³ ♦1 ☼­ ←☼û	N☺§ ☺
)i1∟ ▼2	
ÿ.!i1'☺/t(♠☻☺h << 2)/ ▼28
↕♂i♦§(k \+ 1)]P ☼A ☼♦@ ☼X
♠▼2T ▼◘• /2)k
♠▲2k
☼^ ↔/3)~
♠▼2~
ú$  €
▼♦€
♀‼@ 
☼€
↔ ☺ ►↕4

û•µ  @♦  
   ▼T ☼þ♣♠♣€
↑♥0♂K♦  ↨< •☻♠♣4 ↨♦4 ( ♦Ä 	N◘
Ä ♦”♂☼0 ♥▼V0 ☻ ¨♂▲▬0 ♥<◘▼ d ♥O☺  ¶d ♥▼Pd ☻K☺  ∟0 ♀*◘☼h ☻▲☻l☺☼ ◘ ☼Ø ♥N☻  ↓¨☺♠↨◘▼ Ü ♦▲♥8 	►◘☼8 ♦&€♥|☺☼_• ♣, ♀8☺♦I♣‼♣  ▼☺Ø☻ ▼☻”☻◘◘0 ☼| ♣◘X ☼,
	 œ ☻→
à<b>_INSTANCING_ON </b> /o
(

<b>a#exten</b>↕ ÿ§<b>GL_AMD_vertex_shader_layer : requireX</b>
ÿÿÿÿŠ☼«♀@Aflat↓	☻Y ►u­♀`vs_BLE←♥<b>QDICES&</b> <b>6oat</b>¿♂▬uÓ♀▲uÜ▬	á♀•ý♀▼3ï♀♂☺d ►([ ÿ☺<b>(gl_InstanceID))0</b>♀♣\* 0.5↔ SfractÂ
/0)k♀•☼Œ♀♦Ÿ<b>roundEvenC</b> ☻◄uD /ina ♥#i3 ♀♠! >u0)ˆ♀▼1Ý
3▼1Ý
0♫Ô▬☼Ý
,▼1©↨♥▼1Ý
▼♠®
▼1®
▼▼3®
,•t↨▼1®
6←3®
▼1®
:←3®
▼1®
↔♀÷♥' =ä♥♥š ◄L*	)= â☻☼í
à♦ì
▼♥ì
ÿÿ†▼☺˜
¶☼t
	▬‼t
“<b>MULTIVIEWs</b>
/ ~t
∟î<b>OVR_multiview2k</b>
☼Ã→ÿÿÿÿÎ>iceÛ☻☼¶ ♠♠4 ☼µ ▲♥Ö♥@num_h♣Ÿs = 2) inà$B♠5♫☻▲♫♦6♫mWEIGHT♠←♂4♫☼§←ÿQ♥J☼`ViewID‚•▼)‼←ÿq•H►	œ☺
ƒ
♥D♥/ =→♦♣	€
?].xp←ÿÿÿ„▲§ô→☻♀◘ Ì☺♥0 ♀p☺	% ♫♦☻☼x←▲☼„ 	♫|←☼☺ ‼♫◘∟☼ì(+☼` 1☼ ∟♣☼\ 1☼◘☼♦☼↑☺◄P                ☺       •   ♠   _Color  ♣   Color                 €?  €?  €?  €?    ☺   	   _SrcBlend   ◘   SrcBlend    ☻          @                ☺   	   _DstBlend   ◘   DstBlend    ☻          A                ☺   •   _ZWrite ♠   ZWrite      ☻         €?                ☺   ♠   _ZTest  ♣   ZTest       ☻         €@                ☺   ♣   _Cull   ♦   Cull    ☻                           ☺   ♠   _ZBias  ♣   ZBias       ☻                           ☺   ☺   ☺   ▬   ◘   $Globals    ¶   <b>STEREO_INSTANCING_ON</b>↕   ‼   <b>STEREO_MULTIVIEW_ON</b> §   ↑   <b>UNITY_SINGLE_PASS_STEREO</b>♦   ‼   <b>UnityStereoEyeIndex</b> ♠   §   <b>UnityStereoEyeIndices</b>   ‼   ↕   <b>UnityStereoGlobals</b>  ♣   ♠   _Color  ☺   ♫   <b>unity_MatrixVP</b>  ♥   ‼   <b>unity_ObjectToWorld</b> ☻   ▼   <b>unity_StereoCameraInvProjection</b> ♫   ∟   <b>unity_StereoCameraProjection</b>
  ↓   <b>unity_StereoCameraToWorld</b>   ►   ¶   <b>unity_StereoEyeIndex</b>◄   ▬   <b>unity_StereoEyeIndices</b>  ¶   ▬   <b>unity_StereoMatrixInvV</b>  ♂   ‼   <b>unity_StereoMatrixP</b> 	   ‼   <b>unity_StereoMatrixV</b> 
   ¶   <b>unity_StereoMatrixVP</b>♀   ↨   <b>unity_StereoScaleOffset</b> ◘   ▼   <b>unity_StereoWorldSpaceCameraPos</b> •   ↓   <b>unity_StereoWorldToCamera</b>   ☼               	   _SrcBlend       	   _DstBlend       	   _SrcBlend       	   _DstBlend       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>     €?	   <noninit>       	   <noninit>     €?	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>     pA	   <noninit>         €?	   <noninit>       ♠   _ZTest      •   _ZWrite     ♣   _Cull       ♠   _ZBias      ♠   _ZBias      	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>      A	   <noninit>     C	   <noninit>     C	   <noninit>       	   <noninit>       ♫   <b>unity_FogStart</b>      ♀   <b>unity_FogEnd</b>    ►   <b>unity_FogDensity</b>    	   <noninit>       	   <noninit>       	   <noninit>       	   <noninit>   ♫   <b>unity_FogColor</b>  ÿÿÿÿéH  ♥   ☼   <b>IGNOREPROJECTOR</b> ♦   <b>true</b>♣   <b>QUEUE</b>   ♂   <b>Transparent</b> 
   <b>RenderType</b>  ♂   <b>Transparent</b>         ♠   ♠           	           ♥♣                                  ☺           	           ♥♦                  ☺       ☻   ☻            ♦  ♥   @        ♦  ☺   ☺   €        ♦                      ☺   ☺       	   ☺   ♦       ♥♣                                  ☺   ☺       	   ☺   ♦       ♥♦                  ♥       ☺   ☻            ♦  ☺   ☺   @        ♦      P   ♣   ◘   	       ☻    ♦  
   €   ☻    ♦  ♂    ☺  ☻    ♦  ♀   €☺  ☻    ♦  
   ☻  ☻    ♦  ♫   €☻  ☻    ♦  ☼    ♥  ☻    ♦  ►   €♥  ☻    ♦  ☻   •    ♦  ☻    ♥  ◘    ♦  ☻    ♦      @♦  ♠       ☺   ◄           ♣☺      ♦   ☻   ♣       ♠   ☺           ☺   ☻       	   ☺   ↕       ♥♦                  ☻       ☺   ☻            ♦  ☺   ☺   @        ♦      P   ♣   ◘   	       ☻    ♦  
   €   ☻    ♦  ♂    ☺  ☻    ♦  ♀   €☺  ☻    ♦  
   ☻  ☻    ♦  ♫   €☻  ☻    ♦  ☼    ♥  ☻    ♦  ►   €♥  ☻    ♦  ☻   •    ♦  ☻    ♥  ◘    ♦  ☻    ♦      @♦  ☺   ♣               ë♫  ♥       	   ☺   §       ♥♦                  ♥       ☺   ☻            ♦  ☺   ☺   @        ♦      P   ♣   ◘   	       ☻    ♦  
   €   ☻    ♦  ♂    ☺  ☻    ♦  ♀   €☺  ☻    ♦  
   ☻  ☻    ♦  ♫   €☻  ☻    ♦  ☼    ♥  ☻    ♦  ►   €♥  ☻    ♦  ☻   •    ♦  ☻    ♥  ◘    ♦  ☻    ♦      @♦  ‼       ☺   ¶       ☻    ♦          ☻   ♣       ‼   ☺           ë♫  ♠   ☻                   ♥♣                                  ☺   ♦                   ♥♦                                  ☺   ♥           ☺   ♦       ♥♣                                  ☺   ♣           ☺   ♦       ♥♦                                  ☺   ♠           ☺   ↕       ♥♦                                  ë♫  •           ☺   §       ♥♦                                  ë♫                                      ♥   ☼   <b>IGNOREPROJECTOR</b> ♦   <b>true</b>♣   <b>QUEUE</b>   ♂   <b>Transparent</b> 
   <b>RenderType</b>  ♂   <b>Transparent</b>     ↨   <b>Hidden/Internal-Colored</b>                 ☻   ♣   	   ☻   ☺       ☺   ½♥  ☻   ☺   ½♥  ☺   —•  ☻   ☺   p
 ☺   d2  T♂  ±♦   4   ►♣ ☺ bD♣  ˆ•♀ RÌ♀  D♂ c ►
 `♀ o<Q•♀♣ ☺ •ÿCÉ♦  <b>#ifdef VERTEX</b>
<b>#version 100</b>

<b>uniform </b>	<b>vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];3</b> ☼ <b>MatrixVP.</b>  ñ	_Color;
<b>attribute highp </b>↔ Ï<b>in_POSITION0#</b> •ó•<b>COLOR0;</b>
<b>varying medium </b> &vs   ► ju_xlat♫ ô♣1;
<b>void main()</b>
{
   ) & =c % *¯  " ♣[ & =W 
; ♣Á .yyyy *S☺☼,1]G ☼3 ♫J0] *m nxxxx +˜ ☼Q ¶↔2Q OzzzzQ •♦
 ▼+[ ☼↓3ß ▬1= ♫!☺♫A☻↔1= ☼. 	☺↨☺♦^ 	↕☺▼1G ↓↑2G 	◘☺♥G €gl_PositE♥☼K ♂↑3K <b>LwwwwK</b> ó♥<b>return;</b>
}

<b>#endif</b>
­♥‹<b>FRAGMENT</b>¯♥♥▲ 4GL_! ñ <b>_PRECISION_HIGHV</b> <b>Qpreci5</b> ☻;♥Ëfloat;
#else! ♦>♥♣# ☺… ♀A ?intq♥☼ð♥<b>#define SV_Target0*</b>☺¿<b>FragData[0]w</b>♥ •, ↑=L ☼∟☺♥C   	Ø♦▲☺ð♦☼►♣
 0 ð
↑   <b>UNITY_SINGLE_PASS_STEREO$</b> /%•,♣_eStereo1☻↑84 Hint &  EyeIndexU♣v☺¡ ☺
)i1∟ ↕2∟ pop_shl(♂  a,E☻S b) {Ù☺ ► q(floor(}☻â(a) * pow(2.0,‘☻õ (b)))); }
ivec2Q ☺
 S ☺	 ☺U Ta.x =! èa.x, b.x); a.y↑ ►y↑ 4y);… ¶a] ↑3] ¶3] ▼3] #8a.z↑ ►z↑ ▼zu  ↑4u ¶4u ▼4u ;8a.w↑ ►w↑ ←w  ☼↕•ÿh&i1 ☺☼í♥☺H, 2)0 ▼2B•↕♂W♦§(l \+ 1)]P ☼A ☼♦@ ☼b•♠▼2T ▼◘• /2)u•♠▲2u•☼^ ↔/3)ˆ•♠▼2ˆ•ÿ]♫☺ ☼Ì•C☼` ♀P     ±◘   d   à♠ ☺ bD•  „
♀ SÈ¶  à♀ b¨"  `♫♀ R◘1  D♂ c L1  `♀ S¬1  \♀ &◘2♀ o<Q•♀♦ ☺ •ÿ?♦♠  <b>#ifdef VERTEX</b>
<b>#version 300 es</b>

<b>#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1</b>
#if$ ♂♣J TUNITY▲ o
#else∟ ♥û  uniform
#endif% …<b>SUPPORTSh</b> ƒ<b>LOCATION</b>  ☼& ♀♂N ♦↨ ð☺<b>(x) layout(locat</b>♂☺K= x)/ <b>wBINDING.</b> <b>pbinding-</b> ž<b>, std140)</b>Ý 
j ☼U ♫♠H ☺☺☺♥►☺ÿ∟ 	<b>vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];3</b> ☼ <b>MatrixVP.</b>  ñ☻_Color;
<b>in highp </b>▬ <b>pin_POSI</b>Ã ▼0∟  ó♥<b>COLOR0;</b>
<b>out medium</b>∟ %vs∟ ☺► ju_xlat♫ ô♣1;
<b>void main()</b>
{
   ) & =_ % *   " ♣[ & =W 
; ♣¶ .yyyy *A☺☼,1]G ☼3 ♫J0] *m nxxxx +˜ ☼Q ¶↔2Q OzzzzQ •♦
 ▼+[ ☼↓3ß ▬1= ♫!☺♫/☻↔1= ☼. 	☺↨☺♦^ 	↕☺▼1G ↓↑2G 	◘☺♥G sgl_Posi·♥☼K 	↑3K <b>LwwwwK</b> ¥<b>return;</b>
}
€♦☻*♣Ž<b>FRAGMENT,</b>♣<b>Qpreci</b>↕ ☻¶♥<b>mfloat;</b>↨ <b>1int9</b>♥☼▼♥♣♫€♦=0) P♥¯<b>SV_Target05</b>♥☺♠▲ ( =\ ☼Ú ♥‼	►♠▼☻$♠  ¨♠ð☺$Globals    ♥   ³♠☻ ♥☻$ ►☺L♠•4  €   ‼   v☻ #  , ‼♦8 ♦4  ã♠
¤☺▼ , ☻↨@4 ☼à♠♣ , C↑   ♦♠ð☻<b>INGLE_PASS_STEREO$</b> /Þ	ü♠ÿÜ♦1♠☼­☺☼
’ $0)Œ☺  Ui cStereo◄♥% {C♥
¿☺☼¦ ♣☻> ☻â☻_P[8];9 !▼V9 %?Inv< &▼V¯   CameraPro›☺?ionB %?InvE )☺‼☻‼TL ☼„ %♦Z☻☼? ♥-3 q <b>SSpace</b>☻☺<b>Oos[2w</b> ♦◘8 ±<b>ScaleOffset0</b> ☼¬☻☼'};ž♠☼Ø☻→▼1Ø☻☻ <b>EyeIndex</b>Ù☻♠<b>9int</b>³ ♦1 ☼­ ←☼S
L☺¥ ☺
)i1∟ ▼2a
ÿi!i1'☺/t(?☻☺h << 2)/ ▼2 
↕♂¢♦§(k \+ 1)]P ☼A ☼♦@ ☼°
♠▼2T ▼◘• /2)Ã
♠▲2Ã
☼^ ↔/3)Ö
♠▼2Ö
ß$  Ø
▼♦Ø
♀‼Pü
☼Ø

▼@Ø
  ☺ ►↕Œ

=◘µ  @♦  
   ▼T ☼@♠♠♣  ↑♥¬♂K♦  ↨< •D♠
Ä  4 ( ♦Ä 	 ◘
Ä ♦►♀☼0 ♥▼V0 ☻ ü♂▲▬0 ♥~◘▼ d ♥O☺  ¶d ♥▼Pd ☻K☺  ∟0 ♀l◘☼h ☻▲☻l☺☼b◘ ☼Ø ♥N☻  ↓¨☺♠Y◘▼ Ü ♦▲♥8 	R◘☼8 ♦&€♥|☺☼¡• ♣, ♀8☺♦R♣‼♣  ▼☺ü☻ ▼☻”☻◘◘0 ☼| ♣◘X ☼„
	 œ ☻r
à<b>_INSTANCING_ON </b> /¸
€

<b>a#exten</b>↕ ÿ§<b>GL_AMD_vertex_shader_layer : require</b>°
ÿÿÿÿ ☼♥
>AflatQ	☻; ►u♣
`vs_BLE↓♥]DICES)
▬u*
▲u‹↨	8
•T
▼3F
CB.x =^
►(˜ þ☺<b>(gl_InstanceID)),</b> ♠♀ _* 0.5M  Uract(↕ ☼C 
▬+♀ ♫' Ÿ<b>roundEvenM</b> ♦◄uÔ /inm ♣#i3ü♀♠# >u0)õ♀▼1J♫3▼1J♫0♫™↨☼J♫,▼1n↑♥▼1J♫▼♠←♫▼1←♫▼▼3←♫,•9↑▼1←♫6←3←♫▼1←♫:←3←♫▼1←♫☻♀,♦' =→♦♥ ◄Ls	)= Ç☻☼0↓ç▼♥X♫ÿÿª▼☺♦♫¶☼à
	▬‼à
“MULTIVIEWß
/ ²à
∟î<b>OVR_multiview2</b>×
☼‡←ÿÿÿÿä>iceÛ☻☼¶ ♠♠4 ☼µ ▲♥ì♥@num_~♣Ÿs = 2) inü%@♠¡♫☺î	♣v
oWEIGHT¡♫
☼Ù←ÿ ♥µ☼`ViewIDÑ•▼)×←ÿV•†►	 ☺
Ú
♥d♥/ =8♦♣	×
?].x4∟ÿÿÿ¨▲§¸←☻N◘ Ì☺♥0 ♀p☺	% ♫♦☻☼<∟▲☼„ 	♫@∟☼☺ ‼♫Ì∟☼◘*+☼` 1☼ä∟♣☼\ 1☼`☼♦☼↑☺◄P             ☺       ◄   <b>Internal-Skinning</b>   ☻   ♂   ♥   ►   ♦   main            ♥   
   <b>inVertices</b>          ÿÿÿÿÿÿÿÿ♠   inSkin      ☺   ÿÿÿÿÿÿÿÿ
   <b>inMatrices</b>      ☻   ÿÿÿÿÿÿÿÿ☺   ♂   <b>outVertices</b>         ÿÿÿÿÿÿÿÿP◄  <b>#version 310 es</b>

<b>#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1</b>
<b>#if HLSLCC_ENABLE_UNIFORM_BUFFERS</b>
<b>#define UNITY_UNIFORM</b>
#else
<b>#define UNITY_UNIFORM uniform</b>
<b>#endif</b>
<b>#define UNITY_SUPPORTS_UNIFORM_LOCATION 1</b>
<b>#if UNITY_SUPPORTS_UNIFORM_LOCATION</b>
<b>#define UNITY_LOCATION(x) layout(location = x)</b>
<b>#define UNITY_BINDING(x) layout(binding = x, std140)</b>
#else
<b>#define UNITY_LOCATION(x)</b>
<b>#define UNITY_BINDING(x) layout(std140)</b>
<b>#endif</b>
<b>UNITY_BINDING(0) uniform CGlobals {</b>
	<b>uint g_VertCount;</b>
};
<b> struct inVertices_type {</b>
	<b>uint[3] value;</b>
};

<b>layout(std430, binding = 1) readonly buffer inVertices {</b>
	<b>inVertices_type inVertices_buf[];</b>
};
<b> struct inSkin_type {</b>
	<b>uint[1] value;</b>
};

<b>layout(std430, binding = 2) readonly buffer inSkin {</b>
	<b>inSkin_type inSkin_buf[];</b>
};
<b> struct inMatrices_type {</b>
	<b>uint[16] value;</b>
};

<b>layout(std430, binding = 3) readonly buffer inMatrices {</b>
	<b>inMatrices_type inMatrices_buf[];</b>
};
<b> struct outVertices_type {</b>
	<b>uint[3] value;</b>
};

<b>layout(std430, binding = 0) buffer outVertices {</b>
	<b>outVertices_type outVertices_buf[];</b>
};
<b>vec4 u_xlat0;</b>
<b>bool u_xlatb0;</b>
<b>vec3 u_xlat1;</b>
<b>uint u_xlatu1;</b>
<b>vec4 u_xlat2;</b>
<b>vec4 u_xlat3;</b>
<b>vec4 u_xlat4;</b>
<b>float u_xlat5;</b>
<b>uint u_xlatu5;</b>
<b>vec3 u_xlat6;</b>
<b>vec3 u_xlat7;</b>
<b>vec4 u_xlat8;</b>
<b>vec4 u_xlat9;</b>
<b>vec4 u_xlat10;</b>
<b>int u_xlati12;</b>
<b>uint u_xlatu12;</b>
<b>vec3 u_xlat16;</b>
<b>uint u_xlatu23;</b>
<b>int u_xlati34;</b>
<b>uint u_xlatu34;</b>
<b>bool u_xlatb34;</b>
<b>layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;</b>
<b>void main()</b>
{
<b>    u_xlatb0 = gl_GlobalInvocationID.x>=g_VertCount;</b>
<b>    if(u_xlatb0){</b>
<b>        return;</b>
    }
<b>    u_xlat0.xyz = vec3(uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2]));</b>
<b>    u_xlatu1 = inSkin_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0];</b>
<b>    u_xlati12 = int(gl_GlobalInvocationID.x) + 1;</b>
<b>    u_xlatu12 = inSkin_buf[u_xlati12].value[(0 >> 2) + 0];</b>
<b>    u_xlat2.x = float(0.0);</b>
<b>    u_xlat2.y = float(0.0);</b>
<b>    u_xlat2.z = float(0.0);</b>
<b>    u_xlat2.w = float(0.0);</b>
<b>    u_xlat3.x = float(0.0);</b>
<b>    u_xlat3.y = float(0.0);</b>
<b>    u_xlat3.z = float(0.0);</b>
<b>    u_xlat3.w = float(0.0);</b>
<b>    u_xlat4.x = float(0.0);</b>
<b>    u_xlat4.y = float(0.0);</b>
<b>    u_xlat4.z = float(0.0);</b>
<b>    u_xlat4.w = float(0.0);</b>
<b>    for(uint u_xlatu_loop_1 = u_xlatu1 ; u_xlatu_loop_1<u_xlatu12 ; u_xlatu_loop_1++)</b>
    {
<b>        u_xlatu34 = inSkin_buf[u_xlatu_loop_1].value[(0 >> 2) + 0];</b>
<b>        u_xlatu5 = u_xlatu34 >> 16u;</b>
<b>        u_xlat5 = float(u_xlatu5);</b>
<b>        u_xlat5 = u_xlat5 * 1.52590219e-05;</b>
<b>        u_xlati34 = int(u_xlatu34 & 65535u);</b>
<b>        u_xlat16.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati34].value[(0 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati34].value[(0 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati34].value[(0 >> 2) + 2]));</b>
<b>        u_xlat6.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati34].value[(16 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati34].value[(16 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati34].value[(16 >> 2) + 2]));</b>
<b>        u_xlat7.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati34].value[(32 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati34].value[(32 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati34].value[(32 >> 2) + 2]));</b>
<b>        u_xlat8.xyw = vec3(uintBitsToFloat(inMatrices_buf[u_xlati34].value[(48 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati34].value[(48 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati34].value[(48 >> 2) + 2]));</b>
<b>        u_xlat9.x = u_xlat16.x;</b>
<b>        u_xlat9.y = u_xlat6.x;</b>
<b>        u_xlat9.z = u_xlat7.x;</b>
<b>        u_xlat9.w = u_xlat8.x;</b>
<b>        u_xlat10.x = u_xlat16.y;</b>
<b>        u_xlat10.y = u_xlat6.y;</b>
<b>        u_xlat10.z = u_xlat7.y;</b>
<b>        u_xlat10.w = u_xlat8.y;</b>
<b>        u_xlat8.x = u_xlat16.z;</b>
<b>        u_xlat8.y = u_xlat6.z;</b>
<b>        u_xlat8.z = u_xlat7.z;</b>
<b>        u_xlat2 = u_xlat9 * vec4(u_xlat5) + u_xlat2;</b>
<b>        u_xlat3 = u_xlat10 * vec4(u_xlat5) + u_xlat3;</b>
<b>        u_xlat4 = u_xlat8 * vec4(u_xlat5) + u_xlat4;</b>
    }
<b>    u_xlat0.w = 1.0;</b>
<b>    u_xlat1.x = dot(u_xlat2, u_xlat0);</b>
<b>    u_xlat1.y = dot(u_xlat3, u_xlat0);</b>
<b>    u_xlat1.z = dot(u_xlat4, u_xlat0);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2)] = floatBitsToUint(u_xlat1.x);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1] = floatBitsToUint(u_xlat1.y);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2] = floatBitsToUint(u_xlat1.z);</b>
<b>    return;</b>
}
 ♥   @   ☺   ☺   ♦   main            ♥   
   <b>inVertices</b>          ÿÿÿÿÿÿÿÿ♠   inSkin      ☺   ÿÿÿÿÿÿÿÿ
   <b>inMatrices</b>      ☻   ÿÿÿÿÿÿÿÿ☺   ♂   <b>outVertices</b>         ÿÿÿÿÿÿÿÿG¶  <b>#version 310 es</b>

<b>#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1</b>
<b>#if HLSLCC_ENABLE_UNIFORM_BUFFERS</b>
<b>#define UNITY_UNIFORM</b>
#else
<b>#define UNITY_UNIFORM uniform</b>
<b>#endif</b>
<b>#define UNITY_SUPPORTS_UNIFORM_LOCATION 1</b>
<b>#if UNITY_SUPPORTS_UNIFORM_LOCATION</b>
<b>#define UNITY_LOCATION(x) layout(location = x)</b>
<b>#define UNITY_BINDING(x) layout(binding = x, std140)</b>
#else
<b>#define UNITY_LOCATION(x)</b>
<b>#define UNITY_BINDING(x) layout(std140)</b>
<b>#endif</b>
<b>UNITY_BINDING(0) uniform CGlobals {</b>
	<b>uint g_VertCount;</b>
};
<b> struct inVertices_type {</b>
	<b>uint[6] value;</b>
};

<b>layout(std430, binding = 1) readonly buffer inVertices {</b>
	<b>inVertices_type inVertices_buf[];</b>
};
<b> struct inSkin_type {</b>
	<b>uint[1] value;</b>
};

<b>layout(std430, binding = 2) readonly buffer inSkin {</b>
	<b>inSkin_type inSkin_buf[];</b>
};
<b> struct inMatrices_type {</b>
	<b>uint[16] value;</b>
};

<b>layout(std430, binding = 3) readonly buffer inMatrices {</b>
	<b>inMatrices_type inMatrices_buf[];</b>
};
<b> struct outVertices_type {</b>
	<b>uint[6] value;</b>
};

<b>layout(std430, binding = 0) buffer outVertices {</b>
	<b>outVertices_type outVertices_buf[];</b>
};
<b>vec4 u_xlat0;</b>
<b>bool u_xlatb0;</b>
<b>vec3 u_xlat1;</b>
<b>vec4 u_xlat2;</b>
<b>int u_xlati2;</b>
<b>uint u_xlatu2;</b>
<b>vec4 u_xlat3;</b>
<b>vec4 u_xlat4;</b>
<b>vec4 u_xlat5;</b>
<b>vec4 u_xlat6;</b>
<b>vec3 u_xlat7;</b>
<b>vec3 u_xlat8;</b>
<b>vec4 u_xlat9;</b>
<b>vec4 u_xlat10;</b>
<b>vec4 u_xlat11;</b>
<b>uint u_xlatu14;</b>
<b>int u_xlati26;</b>
<b>uint u_xlatu26;</b>
<b>bool u_xlatb26;</b>
<b>uint u_xlatu37;</b>
<b>float u_xlat38;</b>
<b>uint u_xlatu38;</b>
<b>layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;</b>
<b>void main()</b>
{
<b>    u_xlatb0 = gl_GlobalInvocationID.x>=g_VertCount;</b>
<b>    if(u_xlatb0){</b>
<b>        return;</b>
    }
<b>    u_xlat0 = vec4(uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 3]));</b>
<b>    u_xlat1.xy = vec2(uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 0]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 1]));</b>
<b>    u_xlatu37 = inSkin_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0];</b>
<b>    u_xlati2 = int(gl_GlobalInvocationID.x) + 1;</b>
<b>    u_xlatu2 = inSkin_buf[u_xlati2].value[(0 >> 2) + 0];</b>
<b>    u_xlat3.x = float(0.0);</b>
<b>    u_xlat3.y = float(0.0);</b>
<b>    u_xlat3.z = float(0.0);</b>
<b>    u_xlat3.w = float(0.0);</b>
<b>    u_xlat4.x = float(0.0);</b>
<b>    u_xlat4.y = float(0.0);</b>
<b>    u_xlat4.z = float(0.0);</b>
<b>    u_xlat4.w = float(0.0);</b>
<b>    u_xlat5.x = float(0.0);</b>
<b>    u_xlat5.y = float(0.0);</b>
<b>    u_xlat5.z = float(0.0);</b>
<b>    u_xlat5.w = float(0.0);</b>
<b>    for(uint u_xlatu_loop_1 = u_xlatu37 ; u_xlatu_loop_1<u_xlatu2 ; u_xlatu_loop_1++)</b>
    {
<b>        u_xlatu26 = inSkin_buf[u_xlatu_loop_1].value[(0 >> 2) + 0];</b>
<b>        u_xlatu38 = u_xlatu26 >> 16u;</b>
<b>        u_xlat38 = float(u_xlatu38);</b>
<b>        u_xlat38 = u_xlat38 * 1.52590219e-05;</b>
<b>        u_xlati26 = int(u_xlatu26 & 65535u);</b>
<b>        u_xlat6.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati26].value[(0 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati26].value[(0 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati26].value[(0 >> 2) + 2]));</b>
<b>        u_xlat7.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati26].value[(16 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati26].value[(16 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati26].value[(16 >> 2) + 2]));</b>
<b>        u_xlat8.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati26].value[(32 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati26].value[(32 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati26].value[(32 >> 2) + 2]));</b>
<b>        u_xlat9.xyw = vec3(uintBitsToFloat(inMatrices_buf[u_xlati26].value[(48 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati26].value[(48 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati26].value[(48 >> 2) + 2]));</b>
<b>        u_xlat10.x = u_xlat6.x;</b>
<b>        u_xlat10.y = u_xlat7.x;</b>
<b>        u_xlat10.z = u_xlat8.x;</b>
<b>        u_xlat10.w = u_xlat9.x;</b>
<b>        u_xlat11.x = u_xlat6.y;</b>
<b>        u_xlat11.y = u_xlat7.y;</b>
<b>        u_xlat11.z = u_xlat8.y;</b>
<b>        u_xlat11.w = u_xlat9.y;</b>
<b>        u_xlat9.x = u_xlat6.z;</b>
<b>        u_xlat9.y = u_xlat7.z;</b>
<b>        u_xlat9.z = u_xlat8.z;</b>
<b>        u_xlat3 = u_xlat10 * vec4(u_xlat38) + u_xlat3;</b>
<b>        u_xlat4 = u_xlat11 * vec4(u_xlat38) + u_xlat4;</b>
<b>        u_xlat5 = u_xlat9 * vec4(u_xlat38) + u_xlat5;</b>
    }
<b>    u_xlat2.xyz = u_xlat0.xyz;</b>
<b>    u_xlat2.w = 1.0;</b>
<b>    u_xlat6.x = dot(u_xlat3, u_xlat2);</b>
<b>    u_xlat6.y = dot(u_xlat4, u_xlat2);</b>
<b>    u_xlat6.z = dot(u_xlat5, u_xlat2);</b>
<b>    u_xlat1.z = u_xlat0.w;</b>
<b>    u_xlat6.w = dot(u_xlat3.yzx, u_xlat1.xyz);</b>
<b>    u_xlat0.x = dot(u_xlat4.yzx, u_xlat1.xyz);</b>
<b>    u_xlat0.y = dot(u_xlat5.yzx, u_xlat1.xyz);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2)] = floatBitsToUint(u_xlat6.x);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1] = floatBitsToUint(u_xlat6.y);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2] = floatBitsToUint(u_xlat6.z);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 3] = floatBitsToUint(u_xlat6.w);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2)] = floatBitsToUint(u_xlat0.x);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 1] = floatBitsToUint(u_xlat0.y);</b>
<b>    return;</b>
}
  ♥   @   ☺   ☺   ♦   main            ♥   
   <b>inVertices</b>          ÿÿÿÿÿÿÿÿ♠   inSkin      ☺   ÿÿÿÿÿÿÿÿ
   <b>inMatrices</b>      ☻   ÿÿÿÿÿÿÿÿ☺   ♂   <b>outVertices</b>         ÿÿÿÿÿÿÿÿ↕§  <b>#version 310 es</b>

<b>#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1</b>
<b>#if HLSLCC_ENABLE_UNIFORM_BUFFERS</b>
<b>#define UNITY_UNIFORM</b>
#else
<b>#define UNITY_UNIFORM uniform</b>
<b>#endif</b>
<b>#define UNITY_SUPPORTS_UNIFORM_LOCATION 1</b>
<b>#if UNITY_SUPPORTS_UNIFORM_LOCATION</b>
<b>#define UNITY_LOCATION(x) layout(location = x)</b>
<b>#define UNITY_BINDING(x) layout(binding = x, std140)</b>
#else
<b>#define UNITY_LOCATION(x)</b>
<b>#define UNITY_BINDING(x) layout(std140)</b>
<b>#endif</b>
<b>UNITY_BINDING(0) uniform CGlobals {</b>
	<b>uint g_VertCount;</b>
};
<b> struct inVertices_type {</b>
	<b>uint[7] value;</b>
};

<b>layout(std430, binding = 1) readonly buffer inVertices {</b>
	<b>inVertices_type inVertices_buf[];</b>
};
<b> struct inSkin_type {</b>
	<b>uint[1] value;</b>
};

<b>layout(std430, binding = 2) readonly buffer inSkin {</b>
	<b>inSkin_type inSkin_buf[];</b>
};
<b> struct inMatrices_type {</b>
	<b>uint[16] value;</b>
};

<b>layout(std430, binding = 3) readonly buffer inMatrices {</b>
	<b>inMatrices_type inMatrices_buf[];</b>
};
<b> struct outVertices_type {</b>
	<b>uint[7] value;</b>
};

<b>layout(std430, binding = 0) buffer outVertices {</b>
	<b>outVertices_type outVertices_buf[];</b>
};
<b>vec4 u_xlat0;</b>
<b>bool u_xlatb0;</b>
<b>vec4 u_xlat1;</b>
<b>vec4 u_xlat2;</b>
<b>uint u_xlatu2;</b>
<b>vec4 u_xlat3;</b>
<b>vec4 u_xlat4;</b>
<b>vec4 u_xlat5;</b>
<b>vec4 u_xlat6;</b>
<b>uint u_xlatu6;</b>
<b>vec3 u_xlat7;</b>
<b>vec3 u_xlat8;</b>
<b>vec4 u_xlat9;</b>
<b>vec4 u_xlat10;</b>
<b>vec4 u_xlat11;</b>
<b>int u_xlati14;</b>
<b>uint u_xlatu14;</b>
<b>vec3 u_xlat18;</b>
<b>uint u_xlatu26;</b>
<b>int u_xlati38;</b>
<b>uint u_xlatu38;</b>
<b>bool u_xlatb38;</b>
<b>layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;</b>
<b>void main()</b>
{
<b>    u_xlatb0 = gl_GlobalInvocationID.x>=g_VertCount;</b>
<b>    if(u_xlatb0){</b>
<b>        return;</b>
    }
<b>    u_xlat0 = vec4(uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 3]));</b>
<b>    u_xlat1.xyz = vec3(uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 0]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 1]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 2]));</b>
<b>    u_xlatu2 = inSkin_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0];</b>
<b>    u_xlati14 = int(gl_GlobalInvocationID.x) + 1;</b>
<b>    u_xlatu14 = inSkin_buf[u_xlati14].value[(0 >> 2) + 0];</b>
<b>    u_xlat3.x = float(0.0);</b>
<b>    u_xlat3.y = float(0.0);</b>
<b>    u_xlat3.z = float(0.0);</b>
<b>    u_xlat3.w = float(0.0);</b>
<b>    u_xlat4.x = float(0.0);</b>
<b>    u_xlat4.y = float(0.0);</b>
<b>    u_xlat4.z = float(0.0);</b>
<b>    u_xlat4.w = float(0.0);</b>
<b>    u_xlat5.x = float(0.0);</b>
<b>    u_xlat5.y = float(0.0);</b>
<b>    u_xlat5.z = float(0.0);</b>
<b>    u_xlat5.w = float(0.0);</b>
<b>    for(uint u_xlatu_loop_1 = u_xlatu2 ; u_xlatu_loop_1<u_xlatu14 ; u_xlatu_loop_1++)</b>
    {
<b>        u_xlatu38 = inSkin_buf[u_xlatu_loop_1].value[(0 >> 2) + 0];</b>
<b>        u_xlatu6 = u_xlatu38 >> 16u;</b>
<b>        u_xlat6.x = float(u_xlatu6);</b>
<b>        u_xlat6.x = u_xlat6.x * 1.52590219e-05;</b>
<b>        u_xlati38 = int(u_xlatu38 & 65535u);</b>
<b>        u_xlat18.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati38].value[(0 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati38].value[(0 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati38].value[(0 >> 2) + 2]));</b>
<b>        u_xlat7.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati38].value[(16 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati38].value[(16 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati38].value[(16 >> 2) + 2]));</b>
<b>        u_xlat8.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati38].value[(32 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati38].value[(32 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati38].value[(32 >> 2) + 2]));</b>
<b>        u_xlat9.xyw = vec3(uintBitsToFloat(inMatrices_buf[u_xlati38].value[(48 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati38].value[(48 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati38].value[(48 >> 2) + 2]));</b>
<b>        u_xlat10.x = u_xlat18.x;</b>
<b>        u_xlat10.y = u_xlat7.x;</b>
<b>        u_xlat10.z = u_xlat8.x;</b>
<b>        u_xlat10.w = u_xlat9.x;</b>
<b>        u_xlat11.x = u_xlat18.y;</b>
<b>        u_xlat11.y = u_xlat7.y;</b>
<b>        u_xlat11.z = u_xlat8.y;</b>
<b>        u_xlat11.w = u_xlat9.y;</b>
<b>        u_xlat9.x = u_xlat18.z;</b>
<b>        u_xlat9.y = u_xlat7.z;</b>
<b>        u_xlat9.z = u_xlat8.z;</b>
<b>        u_xlat3 = u_xlat10 * u_xlat6.xxxx + u_xlat3;</b>
<b>        u_xlat4 = u_xlat11 * u_xlat6.xxxx + u_xlat4;</b>
<b>        u_xlat5 = u_xlat9 * u_xlat6.xxxx + u_xlat5;</b>
    }
<b>    u_xlat2.xyz = u_xlat0.xyz;</b>
<b>    u_xlat2.w = 1.0;</b>
<b>    u_xlat6.x = dot(u_xlat3, u_xlat2);</b>
<b>    u_xlat6.y = dot(u_xlat4, u_xlat2);</b>
<b>    u_xlat6.z = dot(u_xlat5, u_xlat2);</b>
<b>    u_xlat1.w = u_xlat0.w;</b>
<b>    u_xlat6.w = dot(u_xlat3.yzx, u_xlat1.xyw);</b>
<b>    u_xlat0.x = dot(u_xlat4.yzx, u_xlat1.xyw);</b>
<b>    u_xlat0.y = dot(u_xlat5.yzx, u_xlat1.xyw);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2)] = floatBitsToUint(u_xlat6.x);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1] = floatBitsToUint(u_xlat6.y);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2] = floatBitsToUint(u_xlat6.z);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 3] = floatBitsToUint(u_xlat6.w);</b>
<b>    u_xlat0.z = u_xlat1.z;</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2)] = floatBitsToUint(u_xlat0.x);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 1] = floatBitsToUint(u_xlat0.y);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 2] = floatBitsToUint(u_xlat0.z);</b>
<b>    return;</b>
}
   ♥   @   ☺   ☺   ♦   main            ♥   
   <b>inVertices</b>          ÿÿÿÿÿÿÿÿ♠   inSkin      ☺   ÿÿÿÿÿÿÿÿ
   <b>inMatrices</b>      ☻   ÿÿÿÿÿÿÿÿ☺   ♂   <b>outVertices</b>         ÿÿÿÿÿÿÿÿ×↨  <b>#version 310 es</b>

<b>#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1</b>
<b>#if HLSLCC_ENABLE_UNIFORM_BUFFERS</b>
<b>#define UNITY_UNIFORM</b>
#else
<b>#define UNITY_UNIFORM uniform</b>
<b>#endif</b>
<b>#define UNITY_SUPPORTS_UNIFORM_LOCATION 1</b>
<b>#if UNITY_SUPPORTS_UNIFORM_LOCATION</b>
<b>#define UNITY_LOCATION(x) layout(location = x)</b>
<b>#define UNITY_BINDING(x) layout(binding = x, std140)</b>
#else
<b>#define UNITY_LOCATION(x)</b>
<b>#define UNITY_BINDING(x) layout(std140)</b>
<b>#endif</b>
<b>UNITY_BINDING(0) uniform CGlobals {</b>
	<b>uint g_VertCount;</b>
};
<b> struct inVertices_type {</b>
	<b>uint[10] value;</b>
};

<b>layout(std430, binding = 1) readonly buffer inVertices {</b>
	<b>inVertices_type inVertices_buf[];</b>
};
<b> struct inSkin_type {</b>
	<b>uint[1] value;</b>
};

<b>layout(std430, binding = 2) readonly buffer inSkin {</b>
	<b>inSkin_type inSkin_buf[];</b>
};
<b> struct inMatrices_type {</b>
	<b>uint[16] value;</b>
};

<b>layout(std430, binding = 3) readonly buffer inMatrices {</b>
	<b>inMatrices_type inMatrices_buf[];</b>
};
<b> struct outVertices_type {</b>
	<b>uint[10] value;</b>
};

<b>layout(std430, binding = 0) buffer outVertices {</b>
	<b>outVertices_type outVertices_buf[];</b>
};
<b>vec4 u_xlat0;</b>
<b>bool u_xlatb0;</b>
<b>vec4 u_xlat1;</b>
<b>vec4 u_xlat2;</b>
<b>vec4 u_xlat3;</b>
<b>uint u_xlatu3;</b>
<b>vec4 u_xlat4;</b>
<b>vec4 u_xlat5;</b>
<b>vec4 u_xlat6;</b>
<b>vec4 u_xlat7;</b>
<b>uint u_xlatu7;</b>
<b>vec3 u_xlat8;</b>
<b>vec3 u_xlat9;</b>
<b>vec4 u_xlat10;</b>
<b>vec4 u_xlat11;</b>
<b>vec4 u_xlat12;</b>
<b>int u_xlati16;</b>
<b>uint u_xlatu16;</b>
<b>vec3 u_xlat20;</b>
<b>uint u_xlatu29;</b>
<b>int u_xlati42;</b>
<b>uint u_xlatu42;</b>
<b>bool u_xlatb42;</b>
<b>layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;</b>
<b>void main()</b>
{
<b>    u_xlatb0 = gl_GlobalInvocationID.x>=g_VertCount;</b>
<b>    if(u_xlatb0){</b>
<b>        return;</b>
    }
<b>    u_xlat0 = vec4(uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 3]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2]));</b>
<b>    u_xlat1 = vec4(uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 0]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 1]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 2]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 3]));</b>
<b>    u_xlat2.xy = vec2(uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(32 >> 2) + 0]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(32 >> 2) + 1]));</b>
<b>    u_xlatu3 = inSkin_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0];</b>
<b>    u_xlati16 = int(gl_GlobalInvocationID.x) + 1;</b>
<b>    u_xlatu16 = inSkin_buf[u_xlati16].value[(0 >> 2) + 0];</b>
<b>    u_xlat4.x = float(0.0);</b>
<b>    u_xlat4.y = float(0.0);</b>
<b>    u_xlat4.z = float(0.0);</b>
<b>    u_xlat4.w = float(0.0);</b>
<b>    u_xlat5.x = float(0.0);</b>
<b>    u_xlat5.y = float(0.0);</b>
<b>    u_xlat5.z = float(0.0);</b>
<b>    u_xlat5.w = float(0.0);</b>
<b>    u_xlat6.x = float(0.0);</b>
<b>    u_xlat6.y = float(0.0);</b>
<b>    u_xlat6.z = float(0.0);</b>
<b>    u_xlat6.w = float(0.0);</b>
<b>    for(uint u_xlatu_loop_1 = u_xlatu3 ; u_xlatu_loop_1<u_xlatu16 ; u_xlatu_loop_1++)</b>
    {
<b>        u_xlatu42 = inSkin_buf[u_xlatu_loop_1].value[(0 >> 2) + 0];</b>
<b>        u_xlatu7 = u_xlatu42 >> 16u;</b>
<b>        u_xlat7.x = float(u_xlatu7);</b>
<b>        u_xlat7.x = u_xlat7.x * 1.52590219e-05;</b>
<b>        u_xlati42 = int(u_xlatu42 & 65535u);</b>
<b>        u_xlat20.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati42].value[(0 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati42].value[(0 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati42].value[(0 >> 2) + 2]));</b>
<b>        u_xlat8.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati42].value[(16 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati42].value[(16 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati42].value[(16 >> 2) + 2]));</b>
<b>        u_xlat9.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati42].value[(32 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati42].value[(32 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati42].value[(32 >> 2) + 2]));</b>
<b>        u_xlat10.xyw = vec3(uintBitsToFloat(inMatrices_buf[u_xlati42].value[(48 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati42].value[(48 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati42].value[(48 >> 2) + 2]));</b>
<b>        u_xlat11.x = u_xlat20.x;</b>
<b>        u_xlat11.y = u_xlat8.x;</b>
<b>        u_xlat11.z = u_xlat9.x;</b>
<b>        u_xlat11.w = u_xlat10.x;</b>
<b>        u_xlat12.x = u_xlat20.y;</b>
<b>        u_xlat12.y = u_xlat8.y;</b>
<b>        u_xlat12.z = u_xlat9.y;</b>
<b>        u_xlat12.w = u_xlat10.y;</b>
<b>        u_xlat10.x = u_xlat20.z;</b>
<b>        u_xlat10.y = u_xlat8.z;</b>
<b>        u_xlat10.z = u_xlat9.z;</b>
<b>        u_xlat4 = u_xlat11 * u_xlat7.xxxx + u_xlat4;</b>
<b>        u_xlat5 = u_xlat12 * u_xlat7.xxxx + u_xlat5;</b>
<b>        u_xlat6 = u_xlat10 * u_xlat7.xxxx + u_xlat6;</b>
    }
<b>    u_xlat3.xyz = u_xlat0.yzw;</b>
<b>    u_xlat3.w = 1.0;</b>
<b>    u_xlat7.x = dot(u_xlat4, u_xlat3);</b>
<b>    u_xlat7.y = dot(u_xlat5, u_xlat3);</b>
<b>    u_xlat7.z = dot(u_xlat6, u_xlat3);</b>
<b>    u_xlat0.yz = u_xlat1.xy;</b>
<b>    u_xlat7.w = dot(u_xlat4.xyz, u_xlat0.xyz);</b>
<b>    u_xlat3.x = dot(u_xlat5.xyz, u_xlat0.xyz);</b>
<b>    u_xlat3.y = dot(u_xlat6.xyz, u_xlat0.xyz);</b>
<b>    u_xlat2.zw = u_xlat1.zw;</b>
<b>    u_xlat3.z = dot(u_xlat4.zxy, u_xlat2.xzw);</b>
<b>    u_xlat3.w = dot(u_xlat5.zxy, u_xlat2.xzw);</b>
<b>    u_xlat2.x = dot(u_xlat6.zxy, u_xlat2.xzw);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2)] = floatBitsToUint(u_xlat7.x);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1] = floatBitsToUint(u_xlat7.y);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2] = floatBitsToUint(u_xlat7.z);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 3] = floatBitsToUint(u_xlat7.w);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2)] = floatBitsToUint(u_xlat3.x);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 1] = floatBitsToUint(u_xlat3.y);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 2] = floatBitsToUint(u_xlat3.z);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 3] = floatBitsToUint(u_xlat3.w);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(32 >> 2)] = floatBitsToUint(u_xlat2.x);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(32 >> 2) + 1] = floatBitsToUint(u_xlat2.y);</b>
<b>    return;</b>
}
  ♥   @   ☺   ☺   ♦   main            ♥   
   <b>inVertices</b>          ÿÿÿÿÿÿÿÿ♠   inSkin      ☺   ÿÿÿÿÿÿÿÿ
   <b>inMatrices</b>      ☻   ÿÿÿÿÿÿÿÿ☺   ♂   <b>outVertices</b>         ÿÿÿÿÿÿÿÿª♀  <b>#version 310 es</b>

<b>#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1</b>
<b>#if HLSLCC_ENABLE_UNIFORM_BUFFERS</b>
<b>#define UNITY_UNIFORM</b>
#else
<b>#define UNITY_UNIFORM uniform</b>
<b>#endif</b>
<b>#define UNITY_SUPPORTS_UNIFORM_LOCATION 1</b>
<b>#if UNITY_SUPPORTS_UNIFORM_LOCATION</b>
<b>#define UNITY_LOCATION(x) layout(location = x)</b>
<b>#define UNITY_BINDING(x) layout(binding = x, std140)</b>
#else
<b>#define UNITY_LOCATION(x)</b>
<b>#define UNITY_BINDING(x) layout(std140)</b>
<b>#endif</b>
<b>UNITY_BINDING(0) uniform CGlobals {</b>
	<b>uint g_VertCount;</b>
};
<b> struct inVertices_type {</b>
	<b>uint[3] value;</b>
};

<b>layout(std430, binding = 1) readonly buffer inVertices {</b>
	<b>inVertices_type inVertices_buf[];</b>
};
<b> struct inSkin_type {</b>
	<b>uint[1] value;</b>
};

<b>layout(std430, binding = 2) readonly buffer inSkin {</b>
	<b>inSkin_type inSkin_buf[];</b>
};
<b> struct inMatrices_type {</b>
	<b>uint[16] value;</b>
};

<b>layout(std430, binding = 3) readonly buffer inMatrices {</b>
	<b>inMatrices_type inMatrices_buf[];</b>
};
<b> struct outVertices_type {</b>
	<b>uint[3] value;</b>
};

<b>layout(std430, binding = 0) buffer outVertices {</b>
	<b>outVertices_type outVertices_buf[];</b>
};
<b>vec4 u_xlat0;</b>
<b>bool u_xlatb0;</b>
<b>int u_xlati1;</b>
<b>vec3 u_xlat2;</b>
<b>vec3 u_xlat3;</b>
<b>vec4 u_xlat4;</b>
<b>vec4 u_xlat5;</b>
<b>vec4 u_xlat6;</b>
<b>vec3 u_xlat8;</b>
<b>layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;</b>
<b>void main()</b>
{
<b>    u_xlatb0 = gl_GlobalInvocationID.x>=g_VertCount;</b>
<b>    if(u_xlatb0){</b>
<b>        return;</b>
    }
<b>    u_xlat0.xyz = vec3(uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2]));</b>
<b>    u_xlati1 = int(inSkin_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0]);</b>
<b>    u_xlat8.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati1].value[(0 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati1].value[(0 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati1].value[(0 >> 2) + 2]));</b>
<b>    u_xlat2.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati1].value[(16 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati1].value[(16 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati1].value[(16 >> 2) + 2]));</b>
<b>    u_xlat3.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati1].value[(32 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati1].value[(32 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati1].value[(32 >> 2) + 2]));</b>
<b>    u_xlat4.xyw = vec3(uintBitsToFloat(inMatrices_buf[u_xlati1].value[(48 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati1].value[(48 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati1].value[(48 >> 2) + 2]));</b>
<b>    u_xlat5.x = u_xlat8.x;</b>
<b>    u_xlat5.y = u_xlat2.x;</b>
<b>    u_xlat5.z = u_xlat3.x;</b>
<b>    u_xlat5.w = u_xlat4.x;</b>
<b>    u_xlat0.w = 1.0;</b>
<b>    u_xlat5.x = dot(u_xlat5, u_xlat0);</b>
<b>    u_xlat6.x = u_xlat8.y;</b>
<b>    u_xlat6.y = u_xlat2.y;</b>
<b>    u_xlat6.z = u_xlat3.y;</b>
<b>    u_xlat6.w = u_xlat4.y;</b>
<b>    u_xlat5.y = dot(u_xlat6, u_xlat0);</b>
<b>    u_xlat4.x = u_xlat8.z;</b>
<b>    u_xlat4.y = u_xlat2.z;</b>
<b>    u_xlat4.z = u_xlat3.z;</b>
<b>    u_xlat5.z = dot(u_xlat4, u_xlat0);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2)] = floatBitsToUint(u_xlat5.x);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1] = floatBitsToUint(u_xlat5.y);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2] = floatBitsToUint(u_xlat5.z);</b>
<b>    return;</b>
}
   ♥   @   ☺   ☺   ♦   main            ♥   
   <b>inVertices</b>          ÿÿÿÿÿÿÿÿ♠   inSkin      ☺   ÿÿÿÿÿÿÿÿ
   <b>inMatrices</b>      ☻   ÿÿÿÿÿÿÿÿ☺   ♂   <b>outVertices</b>         ÿÿÿÿÿÿÿÿÃ☼  <b>#version 310 es</b>

<b>#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1</b>
<b>#if HLSLCC_ENABLE_UNIFORM_BUFFERS</b>
<b>#define UNITY_UNIFORM</b>
#else
<b>#define UNITY_UNIFORM uniform</b>
<b>#endif</b>
<b>#define UNITY_SUPPORTS_UNIFORM_LOCATION 1</b>
<b>#if UNITY_SUPPORTS_UNIFORM_LOCATION</b>
<b>#define UNITY_LOCATION(x) layout(location = x)</b>
<b>#define UNITY_BINDING(x) layout(binding = x, std140)</b>
#else
<b>#define UNITY_LOCATION(x)</b>
<b>#define UNITY_BINDING(x) layout(std140)</b>
<b>#endif</b>
<b>UNITY_BINDING(0) uniform CGlobals {</b>
	<b>uint g_VertCount;</b>
};
<b> struct inVertices_type {</b>
	<b>uint[6] value;</b>
};

<b>layout(std430, binding = 1) readonly buffer inVertices {</b>
	<b>inVertices_type inVertices_buf[];</b>
};
<b> struct inSkin_type {</b>
	<b>uint[1] value;</b>
};

<b>layout(std430, binding = 2) readonly buffer inSkin {</b>
	<b>inSkin_type inSkin_buf[];</b>
};
<b> struct inMatrices_type {</b>
	<b>uint[16] value;</b>
};

<b>layout(std430, binding = 3) readonly buffer inMatrices {</b>
	<b>inMatrices_type inMatrices_buf[];</b>
};
<b> struct outVertices_type {</b>
	<b>uint[6] value;</b>
};

<b>layout(std430, binding = 0) buffer outVertices {</b>
	<b>outVertices_type outVertices_buf[];</b>
};
<b>vec4 u_xlat0;</b>
<b>bool u_xlatb0;</b>
<b>vec3 u_xlat1;</b>
<b>vec3 u_xlat2;</b>
<b>vec3 u_xlat3;</b>
<b>vec3 u_xlat4;</b>
<b>vec4 u_xlat5;</b>
<b>vec4 u_xlat6;</b>
<b>vec4 u_xlat7;</b>
<b>vec4 u_xlat8;</b>
<b>vec4 u_xlat9;</b>
<b>int u_xlati31;</b>
<b>layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;</b>
<b>void main()</b>
{
<b>    u_xlatb0 = gl_GlobalInvocationID.x>=g_VertCount;</b>
<b>    if(u_xlatb0){</b>
<b>        return;</b>
    }
<b>    u_xlat0 = vec4(uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 3]));</b>
<b>    u_xlat1.xy = vec2(uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 0]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 1]));</b>
<b>    u_xlati31 = int(inSkin_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0]);</b>
<b>    u_xlat2.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati31].value[(0 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati31].value[(0 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati31].value[(0 >> 2) + 2]));</b>
<b>    u_xlat3.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati31].value[(16 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati31].value[(16 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati31].value[(16 >> 2) + 2]));</b>
<b>    u_xlat4.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati31].value[(32 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati31].value[(32 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati31].value[(32 >> 2) + 2]));</b>
<b>    u_xlat5.xyw = vec3(uintBitsToFloat(inMatrices_buf[u_xlati31].value[(48 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati31].value[(48 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati31].value[(48 >> 2) + 2]));</b>
<b>    u_xlat6.x = u_xlat2.x;</b>
<b>    u_xlat6.y = u_xlat3.x;</b>
<b>    u_xlat6.z = u_xlat4.x;</b>
<b>    u_xlat6.w = u_xlat5.x;</b>
<b>    u_xlat7.xyz = u_xlat0.xyz;</b>
<b>    u_xlat7.w = 1.0;</b>
<b>    u_xlat8.x = dot(u_xlat6, u_xlat7);</b>
<b>    u_xlat9.x = u_xlat2.y;</b>
<b>    u_xlat9.y = u_xlat3.y;</b>
<b>    u_xlat9.z = u_xlat4.y;</b>
<b>    u_xlat9.w = u_xlat5.y;</b>
<b>    u_xlat8.y = dot(u_xlat9, u_xlat7);</b>
<b>    u_xlat5.x = u_xlat2.z;</b>
<b>    u_xlat5.y = u_xlat3.z;</b>
<b>    u_xlat5.z = u_xlat4.z;</b>
<b>    u_xlat8.z = dot(u_xlat5, u_xlat7);</b>
<b>    u_xlat1.z = u_xlat0.w;</b>
<b>    u_xlat8.w = dot(u_xlat6.yzx, u_xlat1.xyz);</b>
<b>    u_xlat0.x = dot(u_xlat9.yzx, u_xlat1.xyz);</b>
<b>    u_xlat0.y = dot(u_xlat5.yzx, u_xlat1.xyz);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2)] = floatBitsToUint(u_xlat8.x);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1] = floatBitsToUint(u_xlat8.y);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2] = floatBitsToUint(u_xlat8.z);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 3] = floatBitsToUint(u_xlat8.w);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2)] = floatBitsToUint(u_xlat0.x);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 1] = floatBitsToUint(u_xlat0.y);</b>
<b>    return;</b>
}
  ♥   @   ☺   ☺   ♦   main            ♥   
   <b>inVertices</b>          ÿÿÿÿÿÿÿÿ♠   inSkin      ☺   ÿÿÿÿÿÿÿÿ
   <b>inMatrices</b>      ☻   ÿÿÿÿÿÿÿÿ☺   ♂   <b>outVertices</b>         ÿÿÿÿÿÿÿÿ…►  <b>#version 310 es</b>

<b>#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1</b>
<b>#if HLSLCC_ENABLE_UNIFORM_BUFFERS</b>
<b>#define UNITY_UNIFORM</b>
#else
<b>#define UNITY_UNIFORM uniform</b>
<b>#endif</b>
<b>#define UNITY_SUPPORTS_UNIFORM_LOCATION 1</b>
<b>#if UNITY_SUPPORTS_UNIFORM_LOCATION</b>
<b>#define UNITY_LOCATION(x) layout(location = x)</b>
<b>#define UNITY_BINDING(x) layout(binding = x, std140)</b>
#else
<b>#define UNITY_LOCATION(x)</b>
<b>#define UNITY_BINDING(x) layout(std140)</b>
<b>#endif</b>
<b>UNITY_BINDING(0) uniform CGlobals {</b>
	<b>uint g_VertCount;</b>
};
<b> struct inVertices_type {</b>
	<b>uint[7] value;</b>
};

<b>layout(std430, binding = 1) readonly buffer inVertices {</b>
	<b>inVertices_type inVertices_buf[];</b>
};
<b> struct inSkin_type {</b>
	<b>uint[1] value;</b>
};

<b>layout(std430, binding = 2) readonly buffer inSkin {</b>
	<b>inSkin_type inSkin_buf[];</b>
};
<b> struct inMatrices_type {</b>
	<b>uint[16] value;</b>
};

<b>layout(std430, binding = 3) readonly buffer inMatrices {</b>
	<b>inMatrices_type inMatrices_buf[];</b>
};
<b> struct outVertices_type {</b>
	<b>uint[7] value;</b>
};

<b>layout(std430, binding = 0) buffer outVertices {</b>
	<b>outVertices_type outVertices_buf[];</b>
};
<b>vec4 u_xlat0;</b>
<b>bool u_xlatb0;</b>
<b>vec4 u_xlat1;</b>
<b>int u_xlati2;</b>
<b>vec3 u_xlat3;</b>
<b>vec3 u_xlat4;</b>
<b>vec4 u_xlat5;</b>
<b>vec4 u_xlat6;</b>
<b>vec4 u_xlat7;</b>
<b>vec4 u_xlat8;</b>
<b>vec4 u_xlat9;</b>
<b>vec3 u_xlat12;</b>
<b>layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;</b>
<b>void main()</b>
{
<b>    u_xlatb0 = gl_GlobalInvocationID.x>=g_VertCount;</b>
<b>    if(u_xlatb0){</b>
<b>        return;</b>
    }
<b>    u_xlat0 = vec4(uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 3]));</b>
<b>    u_xlat1.xyz = vec3(uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 0]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 1]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 2]));</b>
<b>    u_xlati2 = int(inSkin_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0]);</b>
<b>    u_xlat12.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati2].value[(0 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati2].value[(0 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati2].value[(0 >> 2) + 2]));</b>
<b>    u_xlat3.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati2].value[(16 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati2].value[(16 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati2].value[(16 >> 2) + 2]));</b>
<b>    u_xlat4.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati2].value[(32 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati2].value[(32 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati2].value[(32 >> 2) + 2]));</b>
<b>    u_xlat5.xyw = vec3(uintBitsToFloat(inMatrices_buf[u_xlati2].value[(48 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati2].value[(48 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati2].value[(48 >> 2) + 2]));</b>
<b>    u_xlat6.x = u_xlat12.x;</b>
<b>    u_xlat6.y = u_xlat3.x;</b>
<b>    u_xlat6.z = u_xlat4.x;</b>
<b>    u_xlat6.w = u_xlat5.x;</b>
<b>    u_xlat7.xyz = u_xlat0.xyz;</b>
<b>    u_xlat7.w = 1.0;</b>
<b>    u_xlat8.x = dot(u_xlat6, u_xlat7);</b>
<b>    u_xlat9.x = u_xlat12.y;</b>
<b>    u_xlat9.y = u_xlat3.y;</b>
<b>    u_xlat9.z = u_xlat4.y;</b>
<b>    u_xlat9.w = u_xlat5.y;</b>
<b>    u_xlat8.y = dot(u_xlat9, u_xlat7);</b>
<b>    u_xlat5.x = u_xlat12.z;</b>
<b>    u_xlat5.y = u_xlat3.z;</b>
<b>    u_xlat5.z = u_xlat4.z;</b>
<b>    u_xlat8.z = dot(u_xlat5, u_xlat7);</b>
<b>    u_xlat1.w = u_xlat0.w;</b>
<b>    u_xlat8.w = dot(u_xlat6.yzx, u_xlat1.xyw);</b>
<b>    u_xlat0.x = dot(u_xlat9.yzx, u_xlat1.xyw);</b>
<b>    u_xlat0.y = dot(u_xlat5.yzx, u_xlat1.xyw);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2)] = floatBitsToUint(u_xlat8.x);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1] = floatBitsToUint(u_xlat8.y);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2] = floatBitsToUint(u_xlat8.z);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 3] = floatBitsToUint(u_xlat8.w);</b>
<b>    u_xlat0.z = u_xlat1.z;</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2)] = floatBitsToUint(u_xlat0.x);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 1] = floatBitsToUint(u_xlat0.y);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 2] = floatBitsToUint(u_xlat0.z);</b>
<b>    return;</b>
}
    ♥   @   ☺   ☺   ♦   main            ♥   
   <b>inVertices</b>          ÿÿÿÿÿÿÿÿ♠   inSkin      ☺   ÿÿÿÿÿÿÿÿ
   <b>inMatrices</b>      ☻   ÿÿÿÿÿÿÿÿ☺   ♂   <b>outVertices</b>         ÿÿÿÿÿÿÿÿX‼  <b>#version 310 es</b>

<b>#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1</b>
<b>#if HLSLCC_ENABLE_UNIFORM_BUFFERS</b>
<b>#define UNITY_UNIFORM</b>
#else
<b>#define UNITY_UNIFORM uniform</b>
<b>#endif</b>
<b>#define UNITY_SUPPORTS_UNIFORM_LOCATION 1</b>
<b>#if UNITY_SUPPORTS_UNIFORM_LOCATION</b>
<b>#define UNITY_LOCATION(x) layout(location = x)</b>
<b>#define UNITY_BINDING(x) layout(binding = x, std140)</b>
#else
<b>#define UNITY_LOCATION(x)</b>
<b>#define UNITY_BINDING(x) layout(std140)</b>
<b>#endif</b>
<b>UNITY_BINDING(0) uniform CGlobals {</b>
	<b>uint g_VertCount;</b>
};
<b> struct inVertices_type {</b>
	<b>uint[10] value;</b>
};

<b>layout(std430, binding = 1) readonly buffer inVertices {</b>
	<b>inVertices_type inVertices_buf[];</b>
};
<b> struct inSkin_type {</b>
	<b>uint[1] value;</b>
};

<b>layout(std430, binding = 2) readonly buffer inSkin {</b>
	<b>inSkin_type inSkin_buf[];</b>
};
<b> struct inMatrices_type {</b>
	<b>uint[16] value;</b>
};

<b>layout(std430, binding = 3) readonly buffer inMatrices {</b>
	<b>inMatrices_type inMatrices_buf[];</b>
};
<b> struct outVertices_type {</b>
	<b>uint[10] value;</b>
};

<b>layout(std430, binding = 0) buffer outVertices {</b>
	<b>outVertices_type outVertices_buf[];</b>
};
<b>vec4 u_xlat0;</b>
<b>bool u_xlatb0;</b>
<b>vec4 u_xlat1;</b>
<b>vec4 u_xlat2;</b>
<b>vec4 u_xlat3;</b>
<b>int u_xlati3;</b>
<b>vec3 u_xlat4;</b>
<b>vec3 u_xlat5;</b>
<b>vec4 u_xlat6;</b>
<b>vec4 u_xlat7;</b>
<b>vec4 u_xlat8;</b>
<b>vec4 u_xlat9;</b>
<b>vec4 u_xlat10;</b>
<b>vec3 u_xlat14;</b>
<b>layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;</b>
<b>void main()</b>
{
<b>    u_xlatb0 = gl_GlobalInvocationID.x>=g_VertCount;</b>
<b>    if(u_xlatb0){</b>
<b>        return;</b>
    }
<b>    u_xlat0 = vec4(uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 3]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2]));</b>
<b>    u_xlat1 = vec4(uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 0]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 1]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 2]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 3]));</b>
<b>    u_xlat2.xy = vec2(uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(32 >> 2) + 0]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(32 >> 2) + 1]));</b>
<b>    u_xlati3 = int(inSkin_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0]);</b>
<b>    u_xlat14.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati3].value[(0 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati3].value[(0 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati3].value[(0 >> 2) + 2]));</b>
<b>    u_xlat4.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati3].value[(16 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati3].value[(16 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati3].value[(16 >> 2) + 2]));</b>
<b>    u_xlat5.xyz = vec3(uintBitsToFloat(inMatrices_buf[u_xlati3].value[(32 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati3].value[(32 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati3].value[(32 >> 2) + 2]));</b>
<b>    u_xlat6.xyw = vec3(uintBitsToFloat(inMatrices_buf[u_xlati3].value[(48 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[u_xlati3].value[(48 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[u_xlati3].value[(48 >> 2) + 2]));</b>
<b>    u_xlat7.x = u_xlat14.x;</b>
<b>    u_xlat7.y = u_xlat4.x;</b>
<b>    u_xlat7.z = u_xlat5.x;</b>
<b>    u_xlat7.w = u_xlat6.x;</b>
<b>    u_xlat8.xyz = u_xlat0.yzw;</b>
<b>    u_xlat8.w = 1.0;</b>
<b>    u_xlat9.x = dot(u_xlat7, u_xlat8);</b>
<b>    u_xlat10.x = u_xlat14.y;</b>
<b>    u_xlat10.y = u_xlat4.y;</b>
<b>    u_xlat10.z = u_xlat5.y;</b>
<b>    u_xlat10.w = u_xlat6.y;</b>
<b>    u_xlat9.y = dot(u_xlat10, u_xlat8);</b>
<b>    u_xlat6.x = u_xlat14.z;</b>
<b>    u_xlat6.y = u_xlat4.z;</b>
<b>    u_xlat6.z = u_xlat5.z;</b>
<b>    u_xlat9.z = dot(u_xlat6, u_xlat8);</b>
<b>    u_xlat0.yz = u_xlat1.xy;</b>
<b>    u_xlat9.w = dot(u_xlat7.xyz, u_xlat0.xyz);</b>
<b>    u_xlat3.x = dot(u_xlat10.xyz, u_xlat0.xyz);</b>
<b>    u_xlat3.y = dot(u_xlat6.xyz, u_xlat0.xyz);</b>
<b>    u_xlat2.zw = u_xlat1.zw;</b>
<b>    u_xlat3.z = dot(u_xlat7.zxy, u_xlat2.xzw);</b>
<b>    u_xlat3.w = dot(u_xlat10.zxy, u_xlat2.xzw);</b>
<b>    u_xlat2.x = dot(u_xlat6.zxy, u_xlat2.xzw);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2)] = floatBitsToUint(u_xlat9.x);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1] = floatBitsToUint(u_xlat9.y);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2] = floatBitsToUint(u_xlat9.z);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 3] = floatBitsToUint(u_xlat9.w);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2)] = floatBitsToUint(u_xlat3.x);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 1] = floatBitsToUint(u_xlat3.y);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 2] = floatBitsToUint(u_xlat3.z);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(16 >> 2) + 3] = floatBitsToUint(u_xlat3.w);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(32 >> 2)] = floatBitsToUint(u_xlat2.x);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(32 >> 2) + 1] = floatBitsToUint(u_xlat2.y);</b>
<b>    return;</b>
}
 ♥   @   ☺   ☺   ♦   main            ♥   
   <b>inVertices</b>          ÿÿÿÿÿÿÿÿ♠   inSkin      ☺   ÿÿÿÿÿÿÿÿ
   <b>inMatrices</b>      ☻   ÿÿÿÿÿÿÿÿ☺   ♂   <b>outVertices</b>         ÿÿÿÿÿÿÿÿë¶  <b>#version 310 es</b>

<b>#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1</b>
<b>#if HLSLCC_ENABLE_UNIFORM_BUFFERS</b>
<b>#define UNITY_UNIFORM</b>
#else
<b>#define UNITY_UNIFORM uniform</b>
<b>#endif</b>
<b>#define UNITY_SUPPORTS_UNIFORM_LOCATION 1</b>
<b>#if UNITY_SUPPORTS_UNIFORM_LOCATION</b>
<b>#define UNITY_LOCATION(x) layout(location = x)</b>
<b>#define UNITY_BINDING(x) layout(binding = x, std140)</b>
#else
<b>#define UNITY_LOCATION(x)</b>
<b>#define UNITY_BINDING(x) layout(std140)</b>
<b>#endif</b>
<b>UNITY_BINDING(0) uniform CGlobals {</b>
	<b>uint g_VertCount;</b>
};
<b> struct inVertices_type {</b>
	<b>uint[3] value;</b>
};

<b>layout(std430, binding = 1) readonly buffer inVertices {</b>
	<b>inVertices_type inVertices_buf[];</b>
};
<b> struct inSkin_type {</b>
	<b>uint[4] value;</b>
};

<b>layout(std430, binding = 2) readonly buffer inSkin {</b>
	<b>inSkin_type inSkin_buf[];</b>
};
<b> struct inMatrices_type {</b>
	<b>uint[16] value;</b>
};

<b>layout(std430, binding = 3) readonly buffer inMatrices {</b>
	<b>inMatrices_type inMatrices_buf[];</b>
};
<b> struct outVertices_type {</b>
	<b>uint[3] value;</b>
};

<b>layout(std430, binding = 0) buffer outVertices {</b>
	<b>outVertices_type outVertices_buf[];</b>
};
<b>vec4 u_xlat0;</b>
<b>bool u_xlatb0;</b>
<b>vec4 u_xlat1;</b>
<b>vec4 u_xlat2;</b>
<b>vec4 u_xlat3;</b>
<b>vec4 u_xlat4;</b>
<b>vec4 u_xlat5;</b>
<b>vec4 u_xlat6;</b>
<b>vec4 u_xlat7;</b>
<b>vec4 u_xlat8;</b>
<b>vec4 u_xlat9;</b>
<b>vec4 u_xlat10;</b>
<b>layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;</b>
<b>void main()</b>
{
<b>    u_xlatb0 = gl_GlobalInvocationID.x>=g_VertCount;</b>
<b>    if(u_xlatb0){</b>
<b>        return;</b>
    }
<b>    u_xlat0.xyz = vec3(uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1]), uintBitsToFloat(inVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2]));</b>
<b>    u_xlat1 = vec4(uintBitsToFloat(inSkin_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 0]), uintBitsToFloat(inSkin_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1]), uintBitsToFloat(inSkin_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2]), uintBitsToFloat(inSkin_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 3]));</b>
<b>    u_xlat2.xyz = vec3(uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.z)].value[(0 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.z)].value[(0 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.z)].value[(0 >> 2) + 2]));</b>
<b>    u_xlat3.xyz = vec3(uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.z)].value[(16 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.z)].value[(16 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.z)].value[(16 >> 2) + 2]));</b>
<b>    u_xlat4.xyz = vec3(uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.z)].value[(32 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.z)].value[(32 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.z)].value[(32 >> 2) + 2]));</b>
<b>    u_xlat5.xyw = vec3(uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.z)].value[(48 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.z)].value[(48 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.z)].value[(48 >> 2) + 2]));</b>
<b>    u_xlat6.x = u_xlat2.x;</b>
<b>    u_xlat6.y = u_xlat3.x;</b>
<b>    u_xlat6.z = u_xlat4.x;</b>
<b>    u_xlat6.w = u_xlat5.x;</b>
<b>    u_xlat7.x = u_xlat2.y;</b>
<b>    u_xlat7.y = u_xlat3.y;</b>
<b>    u_xlat7.z = u_xlat4.y;</b>
<b>    u_xlat7.w = u_xlat5.y;</b>
<b>    u_xlat5.x = u_xlat2.z;</b>
<b>    u_xlat5.y = u_xlat3.z;</b>
<b>    u_xlat5.z = u_xlat4.z;</b>
<b>    u_xlat2.xyz = vec3(uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.w)].value[(0 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.w)].value[(0 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.w)].value[(0 >> 2) + 2]));</b>
<b>    u_xlat3.xyz = vec3(uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.w)].value[(16 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.w)].value[(16 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.w)].value[(16 >> 2) + 2]));</b>
<b>    u_xlat4.xyz = vec3(uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.w)].value[(32 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.w)].value[(32 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.w)].value[(32 >> 2) + 2]));</b>
<b>    u_xlat8.xyw = vec3(uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.w)].value[(48 >> 2) + 0]), uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.w)].value[(48 >> 2) + 1]), uintBitsToFloat(inMatrices_buf[floatBitsToInt(u_xlat1.w)].value[(48 >> 2) + 2]));</b>
<b>    u_xlat9.x = u_xlat2.x;</b>
<b>    u_xlat9.y = u_xlat3.x;</b>
<b>    u_xlat9.z = u_xlat4.x;</b>
<b>    u_xlat9.w = u_xlat8.x;</b>
<b>    u_xlat9 = u_xlat1.yyyy * u_xlat9;</b>
<b>    u_xlat10.x = u_xlat2.y;</b>
<b>    u_xlat10.y = u_xlat3.y;</b>
<b>    u_xlat10.z = u_xlat4.y;</b>
<b>    u_xlat10.w = u_xlat8.y;</b>
<b>    u_xlat10 = u_xlat1.yyyy * u_xlat10;</b>
<b>    u_xlat8.x = u_xlat2.z;</b>
<b>    u_xlat8.y = u_xlat3.z;</b>
<b>    u_xlat8.z = u_xlat4.z;</b>
<b>    u_xlat2 = u_xlat1.yyyy * u_xlat8;</b>
<b>    u_xlat3 = u_xlat6 * u_xlat1.xxxx + u_xlat9;</b>
<b>    u_xlat4 = u_xlat7 * u_xlat1.xxxx + u_xlat10;</b>
<b>    u_xlat1 = u_xlat5 * u_xlat1.xxxx + u_xlat2;</b>
<b>    u_xlat0.w = 1.0;</b>
<b>    u_xlat2.x = dot(u_xlat3, u_xlat0);</b>
<b>    u_xlat2.y = dot(u_xlat4, u_xlat0);</b>
<b>    u_xlat2.z = dot(u_xlat1, u_xlat0);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2)] = floatBitsToUint(u_xlat2.x);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 1] = floatBitsToUint(u_xlat2.y);</b>
<b>    outVertices_buf[gl_GlobalInvocationID.x].value[(0 >> 2) + 2] = floatBitsToUint(u_xlat2.z);</b>
<b>    return;</b>
}
  ♥   @   ☺   ☺   ♦   main            ♥   
   <b>inVertices</b>          ÿÿÿÿÿÿÿÿ♠   inSkin      ☺   ÿÿÿÿÿÿÿÿ
   <b>inMatrices</b>      ☻   ÿÿÿÿÿÿÿÿ☺   ♂   <b>outVertices</b>         ÿÿÿÿÿÿÿÿâ↨  <b>#version 310 es</b>

<b>#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1</b>
<b>#if HLSLCC_ENABLE_UNIFORM_BUFFERS</b>
<b>#define UNITY_UNIFORM</b>
#else
<b>#define UNITY_UNIFORM uniform</b>
<b>#endif</b>
<b>#define UNITY_SUPPORTS_UNIFORM_LOCATION 1</b>
<b>#if UNITY_SUPPORTS_UNIFORM_LOCATION</b>
<b>#define UNITY_LOCATION(x) layout(location = x)</b>
<b>#define UNITY_BINDING(x) layout(binding = x, std140)</b>
#else
<b>#define UNITY_LOCATION(x)</b>
<b>#define UNITY_BINDING(x) layout(std140)</b>

Ë©XI'MbÃL«ÿˆMþéW Ô¥}q3äƒ³ù[\ÿš 1½åïõ´ª◘ËIÌ¦‚îöWÁÿw’*Ã£¢☼ƒÄ¯☻u♀z↓»•Zåî▲Ÿ▲
²BÝ ’cI}¬ŸÍ TÂXÝÒ6%.×
´u`)Ï/' GÛÁüªtE}uþc ((♂♣☻ÁA°PD▬
◄‚A` Pª¶	
☻BA► „¶	♣☻AÐ!ä„0Ð!◘ !C»Ý|Ÿ”æè¶Æ¼Ë êº³¿ò`óCÂxz_›Ã )6Eå+Kk↔pKâßæ='¶T←³{¹¬D↑²ÓÝýàâóÂ÷Iò¾¦­¼Û–ø—O ìr›+ÚSÅßy_CøÑê(?I¸Ž¹šb/&R×8ß65“{tOÓû¾óäÚõeÔÍž▲(?¦Û☻«qËØYI=4d·.„›Zaƒ®éÈ♠O¦žçF™|d‰←åÞ4PÎ³sOe³♫7ÕT◘pMÌ¦¸áM
Y♥¾ëçkvó†Fûõljþë¶[^e¿↔0ÅÃZU Œ­—úR9"«»Qžo▲„►z;♠‘W6'ø↨kÒ¹â7’[ïöë«€'♀DU♠☻Aa ØH–
♣‚ƒ`¡ˆ("
♦‚‚  ÈH8X:!e▬◘X ►♀ô ]¯ûÛåæ•ü¯Û?Yø[♠õÂëî‹ð¡[ïÖ♠óo¡íËð@~k îë↨dÑ$rþaÆµç$#Vü'↔¶gÛv—7@‚·ë['º ˆ'N.…Ë†pï ¹û8 ãpÑâ¶~C hÂ▲³Æ{ž5‘5fþ«‹E®êzwÂ’y7+:~Üÿ.¼ûciÀ;/▬ñVW→œŽ²♂œT¢n↨ºÓJ‘vÐ *ü´y·ÄžyÛÛõÊ¶USðÔÑ€↑æmµV½›¸½ŽŽ“ÚÖð “o←´˜BkÙj∟ˆzªòÜ«ãŸÉþÒÎ←ß¥În<ÂíB'Ë{
,2´ u∟Ø←{•+1
•.jú♀ˆòúãkg▲’§5Õ\◘Œ€ P„▬
◘‚‚  H("
…♀ÁA►P$Ä	▬Ë!£D(²☻☻  ÖU{î?Ó¹•U¹úÿÍýÞo—ù…if®É ôÎZ< ‰$ê½Ø<¼¯èíd[ö•´È §ÚM™ýµ±|TTHu‰c‚3 Ý-ˆ£‼™ ¡ž†¡Y Ÿ»1Ï:#B▬tF1-þ 0þ½£-[←←ä÷Ïg¡)
Leå→½dÇFlØÒÐÕwõ†AôÑ•Ü	KbÝ^È∟B^ìÜ▼ýx↕¯KË¶ÛóÚõ▬NááÁj>àÂ¯ôEòV@j'1òt9K >¿:·
@w♣|eéŽ3+☼Fj£ì~z\:Â¸ñ7dô2"	K
Öçôê Îë¹ ßÚ♦p'♀DS◘ƒ☺`ˆX(↕
◘„‚!!Hˆ"¬4Q£@£@▬◘ ♥·?ñ¿ÚøÛ†Ü—ÿ∟ßÞÔ‡è—hÔA▼\M►@8§ƒ oÔÒX{çµ♫|ŒØø*o›†õï×ë5ß¯|Í÷u♣_V2↕ù{86ÓX¦a?€ƒ»˜éOöJŽ{q&½<˜ÐTQÜ*Iûeˆ¬%áJúSæ#Ö|BÑi^—ççÛÜ³œé”¼‼ÆJg„©dd¸ÉŒQ¸ÿüú◄Ø▲²åÏ€S=Âsƒ\ù¥§½’§→Ù¾pÆ.♫—e♥ +à…Ù„ö(ô8©☻▲7▬~ù±ƒu¹R·â¡}CsÞÌü]¾—ø ·Âbè,¶♂♦ÂAa►P,¶↓♣☻A@ XH6
	‚BB► $¶◄	◘AAYÁ‡’►►►„ ►¡ÍYjïè▼m~'3ynÕûÔƒÙï3 _ëœ ý7:HÆ¦ûxèÍ'Ð▼Õ(ò"Ž(▲n♫☺5t·Êù€<▲ª•ðå|rb◄-L†¥ ☻←ç♥g•♂~÷½+‼—¸æ„0‹»
d’†9ë+½ÔíH&ÄziAgx@/ìÜ♣1 „ï§ú4—¬#¶ÛÅ^…Éi7rÕñ³r+ýõW☼T9¸ÍZ◄ËCÏ¹d^þõE=54
82ÑMË h5Þ'¦ÍÚåYãóGDì¯ œ÷«Ù±_Ç~▬úB%▼$"·5ñu☺▲ æ
í XEq↨Cn_V,ëüâ§»fâ}3¼ìçƒ:L¨az§R‚KÖuà§↑PH↑/'♀DK♠☻Ã@°P,¶	♣
B` X(r
↑‚ ! H(↕
♦„‚→!Ð  !e►€☺ÝÖG í»·O♠Õþ{·¢ôé==ß»Ô↔>ŠØìåº£ò"5u;Í¯QÊ*à²ò›Cl+j>#¹ýÊ¤↨ÿÐWˆWL>¥ã¿nÕ>_#fEÑ¸k\¶f~£#\
“t‘dõþè↔#)«ld¶  ☼ë·T	üº#Oåœ'Ærþóy¬3D↨←§P[–Œ-Ê♫+…j–DùÆ;ãDHÑ¤Ÿ‹N%Œ	 Ïöý34ÜØ®ðmO↓▼bÏ\ì)I{·(•Ð$"=M; É“G½dNÛ♣¡ÿÀ×n©¾¯¥È♥‡▼`þnÐŒÌÏ»~;↑ì<%Ï•Ê§¤ºü2“→Eš•ÛsªL☻♫„R£wUf`yUŠb@H,"
)‚ƒ ¡HH"→♦„ # H(↑h³E‚ˆB►► •÷ú»p÷s£bQ?Æ=%¬üž=ñ_õu∟ÛãgÇù¡∟.†ÏÏ↨âŒäHŽYªÝ¥•1õ]ÖcòAÈà
æÉ
”Ð↕ ♣˜-☼uŒ×8#ó/ûÆ'û>²Ò¥æØ^ìÑV☺}À»«öòËš»š£QijYÑ­;S«fDè↔œ³kuûƒQhJ= |↕~û∟’.¨ ‚þ}↔ð*‹ù¨∟l‹Óõ#.ûÎø↑-ßU4¬
 h­Ø¦¢’žEþ7•äˆÒ÷½G IB¨7↑Ôz«¿¶←¿Ž‡Î"å‚¹Ë–iT↑Î³ú¹í! É^S¹Ws♫“▬^<ò›¦o€'♀DL♣ˆ `˜H(2
♦†„  H(↕↕♦‚   H("
►†‚! a♫ˆY ♦!◘☺D↔▬Ã§ãWï&‰=↔Oþ?Ÿàô—IâkéÿM÷¿(s}↓2♂Ÿ°1ç±ýKyÕ{ðì¿↓?ÆºH×Ç¿ xš	5gò[+ÿZþÃO;_;tù=4→k RkÍÌ‹% ^ ìkê,ç°ëutûŸž›ïy§ÄQ◄♦´ãá*»▼>ÀåÐ!™	O,}K Ë.i&1ª’F^>u▼¼÷T÷Èã~▲ª…►ÎêíGQ¡ÝÅÒVWôT†ü☼
2gú♫» ~‘:.▬œwä¦^← ÷*o‰žæ²(r¿ÎªÓÌ„	ñdeÏ tŸ;3ÿÐ‚.↓OšäÇM½ôÀ•d▼Þ‘Hg
ÕáØ(▬♀♣‚ a ˜$¶#♣♣☺@°Q¤4◄	☻DA◘C¢ÁE‚►►► 9Ÿ▬ßÞžÜ~mg†¾íƒas¯Ûw×ç▬h▲♥æz'@½:1♂~•Ñw€»▼ïˆdB[TCFš„Ä
®‚7kW,EwWàGð♠5¯ÅÅÜ‚Q1‼>å¼-qø ùZçh~—h
ßBÉÕïèo☺ ♂§►
ôHÐu@a♥ÑS
▬↓C 0oí▬§•¬† " p–£+©B°÷³-Å@ç§C;(♫ý.~‡ ËRü¹ö}ÿP·Ñ.=t¢’Ø§CEòWÇÊ2{5TIÖ♠®(íGT•á→]3◘ÌñGû◄çýŸ_ N §£×àAË4♥Ë«Ÿµ™Ä‰¿€noF♂Üú’ð©XV^‚;í…¨/4♦€l=IåJK€'♀DK♣☻Â@ Ð"▬
♦„a!!È(↕↕♦Š ► I ∟→ ♦!☺☺ (i·h›«_↔▼Çú®MK÷^;§¼òMÝû♀g^¶Èvþ♣¦ø#gnýñd ¡Íð»¦öË3ÄgeŸø;5ú²µA‡ø©Š7¡ïÃEqŸ…
|¦V☻ÎøT#à{?)»C+…c☺Ì§¤ÂãÚg×¶\◘íälöX­÷¹U1ž·ÊùQìv¼¯#Wtý♂"¡♣Çkbp-4◄Dßf¤¼i”t↔Œµž®™Q¤>▲Ø›ì\ò±zÆŸ‹::ïm×m↕ý$i+Gž'9¦♀i‹èb…u¥¹Œ†QGœ¨2eK8œD0P,4‼♣☻Á  ˆ(2
♣‚  ¡ˆh"J◘†  ‹•E Ã@▬  ♥¦?ÿº§-ŸY9.Œ§ŽºÔ&ooì▼C9ùÑäÍpI¼gõ×↨¶•Óa­•ø ↔♠Í©«ïÜë AÓd]8ÎoÆ▼mÂw®▲^£◄öi♫®©(êO}6}ê)õyÈç@ï↔Vµó=ÛÌf%,)ôœ◄S"Ë>~tûuBýlL’l°*♫Ô¯Õ2š♠YŠ;i¦˜ãï„¯ w•žŸ[‼³ÊÖz@œ
& ,]Ó?áJ Hdøu»←☼—¬:Ü☻Š£÷¤´Tý¥Ùãq ÅW×½▼‡JÕp↔°ñÃ▼☻Ü¢§J ä«ß→Áúþ=↔ò▲▬»´øÞŽ'♀D3♣☻Â€ X(B↕◄‚ ` X(r
►„  ¡ˆ(A♂:(„ !◘ ♦▲Þßú»=∟wn▼Ñ>Ís´s])Ã|s÷5ÿôOÕ¾5¢ u9d9ímG¼?¶MîˆLÃû▬5	ºÕd¢ìÙ·k:Cxú¥ƒQ ▼ìÜè¾¿J5M↨F5ðC­t^&/›☺}# H◄‼5£ûi‡ýÛ•H‼Å÷j}'|☼sCqšõR	·†9¤{º´Y*Þ▼ô§→a*↔<Vîct «&*Phí ïŒY 2→ æ_X B ♂ ç§‹ê¡6Çš☼]↓¹@◄¾˜À²6◘ Ï’XjäPƒ±e6ySÌj£P£M£ä˜vûkwTû“↓Æ÷™Ò-È◄↕˜Þ‘0[ÂŽ‘öéU=T‰îuØzSQ?}òØ¯ˆñ↓ZþôòÃ ˜(▬
♣‚†  ˆHB
◘„‚( HP♥£@¢☻☻►…☻‡Î¿ÝÅµ?‘¸U× µO5çÕú[üJÔH§ÒéNxü—½íÖö´ãét .m‰Z|G„vgiò /WÎß°CÒ?ˆ¾pI üÇãæÚGc♣µ÷û¬†7‚³?wmÊ[y¤izôQÈT×ô½15Á↔►):!‰†♦K`Jûd¬ë‚Ÿgê5•♀W©¹-←►»•ÖaQz‰►?·99Œ‹<Œ[szÊJèÿ‹▲6„↓ú☺Éi¤ì¶$$→Ä(Æ”K4ýûò¹Ò,↕é;¦`Y¯gÀüFa▬ýÕw¡¥b▼é☼„—s\'♀D;◄♦ÁA►P$$A♣♦AA‘P$$		☻CA  "▬y♦0²☻►…► 8U/ŸUƒý~;ZÓ¿ ë­_▬←☼Ÿò ▼k\Ïû¾•u	=fÇÑu-!\wßKÆ µ¶ìy¼♫=ôE6*ü~²{Í¶anârA·ªä7¤æ ¶‼e↕.o£¦êêÑÜîçu±´¹.Dé¸áþ(WÙß_Æ
GçqŒ« hÑ¨ÙUÚ♥F¶I"T6sëªI¬é^► èñT&õ_♣®¼►þânˆ£¶Œ6ô€Õ+¤ªœõ•è£roõK↓{o^|ú↨♦Éø®1J(6,
­›ÈhðöÞÂç♦dãrzÀëçB©ñŽ kz¶¦±yî♦Æb
×Ž½:V;i¢ ,¶Q	☻A@ P¤¶A♣☻BA►ÐD$	♣♣◘YÑe►►▬  ƒÑC¿Ïò▼ùûæ€ä›Æ¾èüOKiŸ×T><ðo¦Ÿƒ~♫¼↓ÜÒK¥ô'õœünMîsH=ºŸ?/Ì¹'£ûï±▬iDô§pÌ –<~I¸u3D‼ãqp€ Ï¹ÕÉË˜Å♠Î ♣Kƒéÿ♠{ÂcÖ	Õoš7Ïö$e¹-ëTº{µŒ©W†¨cîUöš◘¹¤♀Ú1Ñ8ê9ÔŸŒ¯.a_Þ↨►Ö¦Ò­oÛŠðLq/p¾èÚ▲}Z>&i d¾E”x2íÝwn“528³’y›÷û>Ë¾ê¾Í¯¸àœ i▼øûvTg♥Š[ìÔF7 uoøò|Z¬^[¦ž…´k ¤Ç'♀D3	◘Â  ˆ(B
↔‚BB► DD	↔♣♂♣œ☻ˆBÊ,¶◘•·Û?←÷?Çåòøh¡­†.&ïã®êüÏ—s;:m‡ý×Á÷È¼N[îòß¦r@ƒš‹Ó☺	CÆ!£‰¿F¦|ÄÇs‼ÚUÃñþôp Õ–◘Ã›HRMW↔e‰ŠMtfÄ…t©‡¢Îm↔`T­öévKÒ„ìçÒÎêz¿tª`‡ï9EŽ¼D¬æ↑ì•Õþ¼Øî ’M’DaƒQs4¢ÿ'▲ŽÝ{9§QÖ↨T7=cY–¹²ÜØå²¥ dvÉ♣ IÏZ‘Ä}¦†pŸWéç?Õ←¹ýfæÍæ†Í«r▲²¢♀Z×»‰8¯2¸èã•¬Õp♀U_Àz Jý¹♂‚↓„ a►X(5
♀‚ÁA°H,$1♣♦A@ Pd¶◄♣◘B@‹,è£FË♦! (►MÑ{þS‡‡¨}▼ŸUó▼²½	»ëÖš‡IŒùœàôûz▲}‰]]º›ª«A´mõÝ\←O¥♀Ôw0)Eô¶Ù¶³?³ÐZa=ÞOÅ"²þ→T¡p‹íø±u$v¦´Øg%‰‹æïy}☼¥t:►L9É¨´q„Rr}¶ú©}-(×§∟º»¸š§§j3èmŠq›♀wv®qZô"±↨>☺ÜªŽm"ê
→7`áh]™Èˆ½←nßYï\£<ïBäÞ+Nîj´ÚË
ÂðÎ®í♂¬yg£ÍŸ ¬☻X¸»½
˜ø¨*◄¿ñå↓sþ5çöeã‚(s∟ƒƒ$’¥◘@◘Ù§♦∟ŠÃ©)Ú ♫'♀D3♣☻Ã  X$D	♣
AA PD¤	-☻4Y`² B►☻€▲3ó‘íëOéæû [-Ë↨ûíË>üÌÓ☼¿ü.ø
W£ô☼§l‼X¾Ž +ôš♂í"…÷)Á=æà∟♥³»▬r|¬¢3o£ï…‼ª↓•↓fõýÐáDÓ™∟7ó—←\ÿ♀ÿz#‚‰ù¡Â|©qO¯hÚd…♀®?mÇw2i±¶S;‡ý	Ð Ù	-ùp♫¡l ↔ZûÐ ;&Ö ÊÔS°í®YO¼Ð+W¨úõ↓²³×¼|ÿ▬L¼´ÿ‡;§☼UÐñÔ‹•ßâW:\»¨Ý=ñì•ÿKpúIîªQÝ@ ûkö•¼½‰Ö×’KšœµõÃ@X(▬◄♣♦AA◄►D¶↓♣♠AA¶Ì$↑
▬Y !◘B¶P☺í♫šµW↔↔­Û´}ç.å↨Öz“ëÓ§›¹ é­v¤}↔ˆv²þÕðý” _· êÚòƒ]s¦∟ãìbhN+è…☼Æ4ÚÂ^“ ¹d¬ ï+¼º↑ôž– ÒZ9  "ŸÌ3Zh!áã× 4dîK{*-Çõã▼ÜZ÷¢•o”&ž↑[¡Es¾¸?yš¢Ô‡s3½•▲‰Ÿ¨©£S\ Lþi_2¹ÅhA×m§íJ¤y1éX	^û¡¦¤▬2VçøÍ!h▼(oº←½"÷íœžäø¹T¾ã
I~>☼z(£üŒx­?òuð'♀D,♣‚A`¡◘("↕♀‚† °Pä¤◄♣♦A@Â→!`☻È@☺D♥B^→«óŸØ¼?•i»6 €
Ø♫æÝ¤ëó¶?lmŸ„‼©♥<Šœ\_;/Ê©x}ŸAè,Šû G§¤æÿ´ ªð4JKß3å1æä­Ï×³²G¤→♦«LqÃñl¾úØýžb,Hý▲‘\Ém↓ …VõƒÖ!N”→ÎˆS’¿◘Ý%ueùÚí)ÔÉ–%‚ÐïãÃ{LÆÚmá;µ4àràX↔Fí‘“sïûüãn]â'♫gû;¼ï BÎ”€e¼íäÇ»¶ª B
	æð’;Ú ‼ÏlŒiÃ“«°yýªëZr›rÙ↔gp«."☼¸`]éi ño[ y∟ð‡`˜XD¶♂♣♫AA►PD▬	♣☻A@  $#	◄☻E@ P$4♀8!d!◘@B P(rþ^©ûGÏzÛg÷½Ýj‡aáÈ♂ñ
èÿM♠>oé‰ós›ý©Ñpòi♠c½☺ëák£ÉæEf}ñeé{6É‚¬•4Ÿ…ð£óé¢X¸pøî,Ö7*öXñû↓ö.vöÔ$s—ƒ↨—6´½`v▬ü%ÓJ3«5Ï¢?♀­GØQ¯▼cÃˆü‼¶¤IŽ”Ðê<•ÎoÀ{Ó¤ˆ*&5Qt×Š<jò♦ÔhW«x Qÿ∟
•òŠî¬ôÒÑ¹_W¨ë▲ñtœpb˜Í1ãÑTCªâ 	Ã~¤/J?N$•ø←ôk
X¦‰¶Ë#à­G♦GŸ€'♀D3♦‚ ` H(r
♦†„!!◘h↕J♀‹d,†€!◘◘◘a
▲L~^‡w•ý×>•…Ì◘sÁ
åŸßì.♥¯ÿj³ñÕÝÇ²åñ}j¯€Ç˜^ÿM«OnéÛÓzàgW◄r\Õ¨®‰gÜŽŠÅÝ½¦Lñ¡²Þ☼¹\ü«­éÉ§¦ûòÝðl▲vŒ|S×Vµ©ÆÀñRã]Ž)>Ù}Ù—ã‼‰♫;{T¾ùµ  &{²☻òCR3ÖNÞ¹£C¯¬zÉêœ Nx‹	îg¢☺?ëç45V[∟§¶X←"ÛÎ▼ÝvVÍÊ▬©9~ üÍÜwG?c¸rX¥‡ÏÝ¼”ÿÏÁüîÎ¾	=∟O›Æ♣{2ÿïn▬hñP† °H,$‼♣♦ÁA0P,¶♂
♫ÁD►P¤¶5š,²►▬◘@ (ƒ<|—å-?÷ˆìÜö¾­	ÿÚ½5GiÏÿÁÿÏMš▼r(¼ ¸/õJ∟éL»F&“)µÆÄ^KÔG¹x;7úxŠ?C‚üH&←↨Ð¹¯yÉÿIÅ~1ëô&Ù!ÙùxOýà?g4¢`Ã”►Ý3Gf<¹V‘'UÐTÞ
x/²8OŒ‹S•Œ®L↑♂Ø(Áý♂Í↨,¶}Ì*û@)ÍmNœIk~P↕5Ö§¦ ÑÎ Ÿ♣^‘§»{ß~↔iÂÛÖå´ûs“ÖÜ³2ÆËge ☼†▲“O@  ú7KÜ9~ä~n«ÿ~®ËïÖ®ô{Å·mà☼Ãé3¦`_♀#Ã-na›É↓♂ŒNZ¿ÈÀ=!ôõ`´ÚsG!♀▼²~X‰øm‹ÉèÄ¼♫„‚¯6‼E!→ k▼É®§'♀D4♣‚ ` ˜(↕↕	‚   ˆh2J◘˜ƒ…–h►„!☺☺E 3▲Òœö^ß÷­Zu
½Ÿ♀◄Æ Ìø@f±ßüç ?8æ►ú;£¢§=¼&ÜÉö²☻$ÈÌ▲ö{▲›
‼yzÃC)æví▼qËŒ←”D½▬§ø¯¼♥ýØÄº©*—WÔ²↕þpúc«S.,♫gZ¢
a–9☼´Úªt♂¿øÙ@‹Â ´8Ø¶tKÎ÷6 ·<È]–♂ém‰ç‚Éš•¿nú·îI*ý¸~Peõþ6 nfÞ1Ä¾sS—O§®→/→Öò]‡[♫,hÈ±Ê¾47ó§ŒÙ‚B’±ëzk(´«EÔ•’‘Â↔ååp tÚ Ü♀\<♣♦ÁA  ¤¶		☻Á ¡Èˆ↕Z♦† ²Í▬a B☻Á
 ♫ÕïÑý{w=ã’ñûíîµHV=↨Ž♠œÔÿC÷:[*¼²ó€hÂ
ìÅ¤ÕP$ÿ)º¬ÀzÊ›&÷ËE›?Uù ◄▲D Ê!`∟~+'↔€↨2è€Ìõ^71_qª‰—|G Ú—¦=Áƒmõ~‘ü<gÊVD,lË7²Û®v#Xò☺•¿ëÂôxýG±éøflÍþÙê[ï:BSQÓy'í‼ŠSó’☼KóÊ€ºÇ 4¶í3ó×!§¥»O←r♂‹aŠëT
ïÕÕŽN ·éëxEW‡Ó¥ŸZQ×‚I„u%€×DZí♂©♥¾/Šj¯/'♀D5♣♣☺A0H(V
%‚  ¡◘(2"♦„ˆ³€Yd♣€X  5♠Ÿ§Úª¹ý'ÅŸ§ç™∟oXC÷šü→æaÒ}7ä?ªs’üvé §»…B♂áñÞÛ]th:q¢ú☼•{X˜Ò☼m ú+7¿ÉE½Ï×4{¶ÈÒöazÛU‰þÏ|U◄½«♂.&=I♀šôK!Iê—‡Þ↑aW;	☼↓Øá_#♦:8☼6ÛÓ7†Æt£{ª¿ÝÞÇ☼øþ= ýWCÍ§œ"Nþ◄▲În‚®ÝTäêãˆ²%×↨iÝãé(Íg¥‘hWŸ6'2:<hàÞ‡3=%_aît.‡-‚n-Èç♥×♂↔_Äs³¦“—s³‰NÑ²>”r←:òG
!·æ=µ→5+ð<“±•Kræ8…s"aºtfÛíà“ˆÆ	B‚` H(R↕∟„ ! HH↕↕◘– ! „♠‹ „♣€♀ †á¢´FÛúýkdÑ[n™ù'šú9qˆ=↓ÏñžE↨‚U{ÕC|→Ëûx~/GÏ‰j^§Äñ ¶œ↓▼láÚ§£ï^ôÍê<▲Ëñ▲îgzžÂÊx¦œ?÷¿ µuëe-A↑aA¥z¹â
“*žýõJ♥J↓<◘èª▼V©'ÁÇåÿ►¾Ôú-@→Ó­’ÃŒ+E◘=»$óŠ↑¶É³¡Q²p§▼Þí™îÒîíìØ¯+Ý±ÕNOv▬é☺„…Ðî‹B♦Hß„	RmÿU‡ŸG♦åw\>♥õî►Ü¾vTHñ↑4↔’\GDÜH˜‘Þ/‘c\'♀D5♣♦ÁA°H(R
 ‚‚ ¡ˆ(↕↕♀Š„³E–BÀ,► ☺•5•¥ÿƒŸ_6ï¿•nÚ|/É}↨e¿Ðõ9¿žxû5âiÏ./¶Bãÿ7òÃ{!Ÿþ$☻ýÿÔÿC bÛ™¾7yù·¯4Õ	ÑÏ¦„|£6†Ÿ\r'ß4…	à¡ŠgÜ·œ·Kˆ^FÌjßXã†ç¯ ¡Y p¶M→3ý
§º↑J♂:í↑ƒYWr+fc♀E?1^Jc««áé↔ñŽCžì▲LÁæÇˆõãì¼ " ☺—↕g^¬ýªëà¡Ìö×|ÿV]W¥ ,©ÏÕ↨ør‰Gg›Gß×♣ÚOüÔ→ó→♣h_µ¯-~è©0Q▼↨•²°iñ|M Ý±l)5È×lC*ŽµÆ↔‡ÍÌÌ3♣◘A0°H(↕
◘‚ ! D("¢◘ˆ † ÑD,►►€¢ CÛ?·ï>?2õñ  ·ŽSê ÛqëtI¸ÞûÊ×W¯Ó4¾.9▲]¹¤ºä
K8ŸÕÔÒæGÇ§71~rE*¹¹§ù♥SiýLÿªˆ▲z+hÇkÌp¯ë»;«‘f•_Ý,d☼∟ ‼ÛŽ/•æ¢ FÉH«å→↓î§^~»…ŒJÊó–#»j»@@Š¶#aáFó¨LÅü”▼§˜Ç«ª|3☼K'·↓Õ=§Ñ•óßâlV¬(;g~zÑ3?ÀÈÂØ`!=ó)MŽ«ž4—☻æ]4 ™Ö§zøÏ←ªK‚¸'♀D$♣♦Á@ XD¶!♣♦AB Q♦T	♦ÂAA‘P6YG♣▬B►€€↑B†l +ÄŸVãÛOo0åô¯»aÛo¨û¿”Þö€Þ♂u·þ/Æk
å♫»×bç§á↑þ•ÛqÊ¹ÿ►lœÍ-î∟ÿãØà@ŒÐçöîî 	.<V-™. -@S¢è´dÖB²Ô²²÷x)ÀM ð6Ö]ðÔÇ♀-é
æT~ÏVþ
½Ïýì►!Û•K←ØŽ†®§¾
øC‡S8Z¸÷û-Ÿ▲M{>ÊÛP´ß­tÎÿÛ$NÈÛïŸ►T­œ:^` àTòÒ☻wøŸÂ…cóñÀé3Tñú-ÝŸÂÿøòáÇºˆn›ËÒìü"ö7ç÷▲_☻ÃÆ♥ÍÒ£Ü`}‡È´tî#	ë•Þ↨	AA0P,¶♂	
ÁB►Q$¶◄♣☻A@ Q–YF ►€„♦♣¶ Ï∟ÿIí¨éÌ»çÔ‼ð¿Ï€|¯©ê í- ♥g»i}@▼Ãë46‘ÓßÝÑš♥<▲↨¾çÅ=#*♀↓È|Î_Î û☻|ª~‼#0ò▲`N* ÜçD}® ËúÌ →¾´†4‰<♦ÚÎc↑'¨ÛYô¤–¹☻•  Üb(◄♀F‹È#º¶ž )éÏ
â79‚jñ³Ÿg~J¤H&áœÓó¤lþñúõYÏZ°Õ½:¯[Ó—æ‚£?åÐtv­ÍGèÑ2 ÷‚♣_±¨É∟åûA(í½Ûî←p_¤4♫°ßXe «ïÒódl›äs▲¸SÉÜ~ò♀ üä.ð%ÌÁPÉ‚Ã)ÏØÇ@XïýBÓß¿©»3Zçi¯Õàk♦]•UJ+€'♀D‼♦‚ÁC(P„¶↓
♦A@‘P$d	
☻A@°HH!`²È@B►…¶P♥Ú?♠ûßâ¸§Û↓ß=↔W	ê+þE&­ÿíîã_uèr. óèúmÑïQÝ←Ø☺↨ü¬ ¦,èìný¬Õ+w•d¦;.š¨éø´CÖ»ûª¯3x{IÕ¾úxk¢ ‡b‘{+L(Yî†$éz▼yÌ„ ←Ò©G¶ûbUiEgô▬¿“,o
…[Pâw8$Ž-tÆã çhHxŠç^ÌÆÝÓ‚ì®ùßêv☻Üfû¿ïzSÝQsH¿²a»ž@♦◄1é&H4G÷íÛ¾“|¬¾FA×— ¹Cì5_H,æ|ÜìMÅùƒ▬
{P‼èL
ÃD ▬|ÛÃPP$▬
♦‚‚ ˜ˆ(B
	‚AB‘►$D	!☻BAhè▬B BÈ (☺ä\☼?ÛV°-!ÎõÿÇyüµt☼®õ
n7û
Ê¼?‹¡|¿ò‡ù	!◘ðý×ûæf´"êsòvùÉ♀
►•³˜•¼ ?|ågÞ˜|▼oæï→sh±ÿ‹sÊçÃ½°ý}#(8	7BsA¢:ì·ÅÑiŒÊK†H×ƒ←@ãX5,ÅY8}sãC‘–¢∟uvý¢ñôZ<CS[â›5EY)c3=4U_’ý♂+=Vf%›
☼E.7‹ÿo-N¢¿Ìe;%ü žGÃ♦:´Æ§Ã·8Çû▼•‡Ÿð{o—1Z+uœ×|P¥Ü=ýuç–B7♥▬ •%X¿…Fû§Û“€',D←♦‚  °P$¶	◄♦B@ Ðe$	♣☻A@ P$↑h h°B☻ ♀♣♫×ü~2ÎÖè´i®ï~ž~âß4_+’¹ù=¹♥▼
Ä-AÎ‼kžR‹ŽÛ…^3FÇÕ	çWJÍžöÓèÞnâËo£ïÂ®¥Bs}ËÄÉçç{▬0 ~-‹©¢aš♫îuƒ­ ƒi8’‼£ÑhK¼#‘:ì÷B◘ Ÿ[M¤–Ä¾œkà”ÖÓ¤p–.¶!1sDáÏä↨Z \ÞØ^·♠Œ$;‘¯_[…´§¿5ô←¶· þvùFá\►¡¢3¥▼AŽ«`rkNçáÃS b@Ví5©¿?¦Æü‘úè$|-/Ý	☺a Ø(↕♂♣♦ÁC0Q♦¶9	♦A`¡↑((p@h² ◘B☻Š!CÐ*NÂÙñ¿Ä~;–­›Vª?uæwœÔßjê:?i©Â~Ú‡K«7,♦YÍ/}·v]ö☼ª"ð¾¹·kßKf÷bÿ↨↓!c?Qñ|ï“☺ô_Ç¡ºÙÑTðä9ƒKùÞ«g&J—cïÇ;éïõN³ã{UëÕüNZ“UûbNDYï6dƒ¸ `É♠OÉù►½Oð4:↓Ø©¢D◘♣)…•oqB|ô♣„£¸’)Ù/‡èÚ{øóvùSƒýÈ,Ý®„´>í¶ý€é¬Iz>z™ü¿½JÁ

1K☼°¢®;©ë˜→∟aŽ◘—Ú>»KÉãµº¼♫V▬€♥wè„xÝ4œ¨<â¨ D›AâëÀ"¼sÐ+È°ø 'Ë4ˆ▼kgy«ôuO;¢í☺š’Â£À¼ï ñ:\'Nâ6^©f•›!õ úÈ|Ôã-eåW¸◘@♦þ☻1•×d"§ÅåŠ3ÕžZo°ßTwXæ§↨àö∟Ý↑E4Ìs¤qÄß¸♫í8▼Ùo]◄É↕LwÔni» ¢ !VOyï „S
Øžá’¾)õ◄ãW •ÐÙå►W|ŸMóøe<*ÔØ®Çkã ÿN­AhÇöÌ▼♂Z=‼¹G˜§ß♠¯ê9O9Üóµúl§v|ÌòäËžgq0²\Ï ±ãpÔ[· Ü›GûO—~‚Õ°xY-«j‡Îv–☼{Lì–n¨|.
ý~¾eðè^óp\
:5Ñ‰bÓ↕Ÿ↓Òä7»7.~ó5×w­zKM↓aÕ v\7æz×têóªAM∟”—ž[ïÜþkæ±½G‼°ûßãþ¿3R&☺§ ½ùg¹FÂ^åI*l<‹S9ù]=8åÑSg↓Ñ•óº♣5E♦a‡0«Ü[¦Þ♫»ˆ◘ÔxaÒ˜o	D8J!ÂQ♫↕ˆ9Ù£f¹§_Šæ3~↔yå5xV³ó|T’eÊÇ®¤‰u23Þ"hkx‼(¡=s—¹'↔yŒK←¢ÉQÕ2’6;ó<Û2•aìì[Æ◘ŒÕx5“ô6ú•­Cº²¸4t’B 5v♫E¬4ôè&ê•xá  ♦®2Ðã¤±ë‹Ô/á˜žä•5
K¯W*ÙB»vó+“ w5J‚	{ÖìN*-ï9Y¨Úº¦tO8¹•↨O  8‡õr˜Öä¯Ô
]Â♀Ûìº‘&ÝKV­{üc¸ç¥oëí♥ →¸PŸ▲kI←¿«♀ ‰Y2d:³e˜¥wB BÜ↓Y ¤JÞèRê('‘p $!”Ü=‼hÄN▬æ©Ôü▲×ržŽÌ.ùåf‘’´néR®T☺Pìß▬A[¶ÔZW#☺]¥ÜÞåâ©“c³¦õÜ¤ß°l™T%iuèzÐoCA‼|½Òø <L[ 0DÉ▲ð%ñ♀▼„61n ♣4Oq↨NKô“¶_ ×Jž∟‡àÅzüÍ¢N¡£©7™♠™,◄ÒAODüáÊÉŒ4¨ÏS½D–oBŠoIŠÌY$Ë>↓▬ d•º£Æ S8|ö„Ò▼Í> ËI¦8 ó¸♠¬Að¾ê„ &‘B F)éw85œZ»ÁÝÉfªghrg↨(}¤–€µ¨)iÎôÓ:ºJz²²ëf¶DžJ({”³3Ø×ÏeË]«@f¼'lD5♣☻ÂD0QÄ$◄♣♦BA►‘6pY
☻►„♦♣¶B‡ESõwÛéÏLk½?ý¿☼í→ÏŽhÁ↔,Ãg÷þßŽÃý☼è!▲gÏ-ïøýîÛA£‼¦B
ónWÓÁ(•èöí!…ßÃòÆ*;|♦v♥f'O€◄µe¿ÁÝ'ó☼·bzüëùjÅá◄ÔïÃ €Ç♫ÃÔ▲Ý«šn?ÿŸ‚|¥-À6A∟▲O×6 žî:ÁEÆØÓ¾iðÓOïô( ­"*§õ
3”éJ[♦’ñµ=Dbí=_ª◄qÓÕÆ ◄ ¯0{↨³n†ƒ▲$ä♣Ïˆ ®Z¿1♥» `zØå↓êüHÔ‼HÝt§)PäÈ-HŽ¿Czœq9aŽ› òŽWOü|€ÀaàÇáÇP@G‰åPðev↔»◄t ´↕♂♣
AA►Pì¶♂♣♀AC►Pd¶↓♣♂À!¢▬Q♂♦ ↑@<á\wò×Ææÿ	þ³¿ÿ‡û~Ïúæ♫Ð∟ g9↨èòrÜ„•dçòø£R ↓9Ÿî¹ä¸ lI☼qçærf”:^ê ÿëŸÐ _▼2œvP£†îäct‼ÐÞ³Â Òûùy÷•ñ ♫▼ÀY7•Ø[1Ç¯È¶ ÙÆ±{´Ã¨«gè▬s{Õ<žçÀEˆ?Ÿ’
▲2Ë^ÍõÖ§4Ý∟d↓ôò·§0Œ°Œ5p¨,♣◘ËÏÇ{♥é˜O"þ¼û5âsäGÃE▬z¶ÙÔ9µw2gFñ ž‼#íäÑMYM♥ö4ÇAX.
eF©♠∟É%höþe–=º’ï` Ë©x¹q—3Å◄ qÆ€…◄ý Äf4à§NÐ'Š▬à'♀D,♣☻A` H(R
¶„  ¡ˆh↕↕♦ˆ ! H¨↑X,Ð,►►€¢€→↑~☺ÑÄ´=› Í9Æ•-ô¹“·JC™Û²laÚ?/2T>▲ýw˜)◄—@À-™[ßÂ(PÁýêé}9l›♂v ♠=ì8Î6–óOWòšçºúž▼©‼8f↔[}ŸÕJ‰ð¸‚¶¤¿☼ŸO▼f«Óª4ßyƒ¹z«Yó▼w†♫◘T5…ípó.ø»è5€âèÐÇ­ï♀XÜu,▲Úá▲↓{–¾ôeÏÛômˆ“©ë©♦¶¥,½ÍÎ!¹7▼ †öãÌ;~ ”òz+½f–6û®ßü¿zÝ^Oß…]í*▲F(☼$@>♣îÛˆ▲¢bðëÁ‡ízô!à((	
◘AA►PŠ↕↕♦„ ! Hˆ↕→♦ˆ " là▬X!◘@@P(♫Š[NÛ¡½ ←þ]ý?}þ ♫™ø>▼íã=7sz|€ b˜~>ûlú‘Z×☼#UÑ·RÜ©#™·>óì)_jKøÍØß7u*âjÓáÞÏoEÍ·Z∟|.‘◘šÅ→˜♫ñvv52j\Fô♣×ÇÄ„ÃðñÃŽwXˆ( 9ìý Ì=‘ X'Õ:±D»
▼É&loŠ¤Ð­↕šfÚãã |,÷,þ↔³Ááÿ›—Öj|`÷♠¸‚›☻OFtÈ}m{8ò˜f&þÉÒõÔèbiA¶ôw@oo↓▬ t†ø§♠±†4*ë‰i€N¶☺Ž6æ☺•♫'♀D‼♣◘D@  $4		☻A@ Ì$$		☻IA P$¶►°YG♣☻Á`¶Q@pM+Ë{↔ë£éŒ\$☼4î¥5êaÍSAz▼”	OÛ1¸}èñÐ{Ý"3û§Ùáý‘“æ×¯™û¦œ£—ßÝ8“»↓♂SÇ¯]Ä351RdZyJ:Ý÷%”n*È;%(óæaâ
™%♂¤♥¢ðSý€‼*­;◄É`,4èªQÂfvC‹rEÎëŒëaèn↑N9 I$L¶b ¹☻¸ØL X▬d—☺l”ÖÎ’´¸{­Æ{»Ðc4Ú`4  &▼ [­Å☻væ—ËkÒ¶³ z´ËEL↔àn×«Ñ‘À.â¬¯♂AB°Q$▬
 ‚   ˆ(↕"◘‚‰³@Ñ`„ !
♠ >•öƒÒß=û§Bìm9¥©i¼ksr}Î¯ÕÜÃÀÿYŽ▲GÁÅg↓'!ñ´↓ïõª}♂5'¢šÐ^?×L+jãˆM”ÞGþY/‼¼	ï~}«ã¹↨ú´@▬♦ ›†ïŸe☼·sÀ2◘ƒ*`÷çnÜ2ê?▲òÐ©(ætoZ←\À%»sÃM]†_óVNUûÿþ;:ímV{pðû8züŒ♣o6!ÍOØÇ79s¶Õ←Çìƒ↔>oÕ‡®:ò7PU²IÌî♦£Ô¨►Æ€∟O%'­N 43X€↕5àQ”½òèI5 Ò► sûêqM☼è ←↨4MÊék\8øze€amê>eÏ½‚×š‰♫ÉÄ‼Ïu'îð',D4♦‚ ` PD¶↓♣☻CA◄ D´		☻AB► 0à►à X ♣¶B‡à?¯¶Ž›õ†±·™mß¸▼_Ÿ(¡—ðÅ­∟~L	hÿïÚnßïAÕþ³DÒùY„ÞÚ)◄òƒ&‡Ï♣▲q∟­3D–ö↕žã¹ÏÃ‘¦$ù+J¼²ha@;/!å÷ö?Ó™a|®ìþ¥r÷Ýn↕Òä—↔ ë↨“♀o`u←t·←G¡67Ñìx­úX·'­]g˜þ]6d☻/ ↓½—§…ß-Â- ☻^ÞørA×[∟Ukvnæ¥W a[h◘§KŸ5A˜,\RéW:6+äY;$·”¯çs÷Š{ 
'¡4XN¡ï‚”|@ ºçüˆh
	„A@ˆPD¶↓♣◘Á  Hh↕
◘‚   ˆè"↕↕Èh²►€▬◘☺…►y¯j.gWN#▼ÿ:v_À«5ÿâ|³¸éz®*³ ya→•/8=É¦J↕Í`oxzq€§↑_♫uôîviàæ£%@«ý “{J˜ùÌaÒ@ýQ“ó→Æn÷?◘Ömço× Õ←6¬[hÁ↔☼;º pŒÊ=¾ýbâ8↓2ôúñ_ Ýåb7:¾zˆÔ®SwÇ@Û‚-‚6{	q¡Ø☻ë:♫y1óç↑5 ¨îå^lÒåàXI>-Š◘0;ªß£O4$ï;”Ÿ…↔↓âaD³Çm
Qš►øÂmCTw*±¬☻Å‹çZPh◘¼eT-tÑŒ)ÛH,/óyñÇÝ+p'Nø:Y¤Ê♂(,T±uf>²▼8E¥ÕL¯↔]EÚ¯*}†ô¯&Pcz ñj„N►!Â♦¥÷‹;~m|½ÄQ"},☻ð ›ž¶Q∟▼¿ÓMüë­€♀Î, ¹♀ Aá …Í¶šz	ê”Ãp"ç9Æ→—üKUN2©BöÍ$ö  "€tó,Ê
2aÏ}ÖW0    íÉœ8
9ˆ! ”)K‰F,v%ÈEÎsœç9n0úòÌ5¶²Ë*…»SÃ®™ªÙ-×€  ↑!‚}=µý¸ðŽŽŽŽˆàŸ-÷÷ç—GN€☺&óO*ññ9sÓ+ïï¾}»/Ÿ?}õ°Î°`     c♠;µ¸ Î¯☼â÷½_Ãç˜ÐäaàãñcïuüØå↓á( šM&½↨•-↔Þ↨SÔhhha†§Zø+Ÿ¨áñ&§`☺4‘B♦xµ[õ•TX®©‘~l¦âµ%‡ÙI7š’ LÀû0>Ì☼¢☺"☻‘"u¶#QB30?S ö`}˜8@ƒµºL¡³£∟¶®[?™ã\¯¬¬Î?N$»”¥dõÒí*ÕT←ä zß(öˆÝa▬ò♦ñuô÷øø?¯çÍ9¯ž¹3Ÿ♦gmF↔¿˜ó%)² ?Pä`Ã◄rµé♀§?˜Ý9‼nØ‡♠RÕ↑ bé6g*Ó<Ö↓ˆêÕÛÚåu}<←%Ï9ZžW !váƒÖùÉä×>♠←mô6%Ðsé­◄ ù%Â♦Š4IãRÜ{m’óõZFÛŸ—g>uv‹→Û\–lˆòj¶ ßíäï  pÜ^¾Ã½WU▲œ%>j«ljªªO‘I¹Tˆ¡.ŽuÙæ£◄®—µúåÏ<óÓK♥É%Ð†×ÉŠ>Ÿ‘Ùžr”▼ëgÃëùŒüÖ∟ŠÀ#$•J­K+Äòf:¬WL·Må³³Ç¦bQ÷Ÿ«Wóù®U1”ÍÉ™◄í|(ºJdÓG¾z$ñìéFðÏ ☻♦ åŒÕ¼r[û×d-[Ú{¸ö)žZÐ½¢(h¶çA¶G1«S¿ÉÕj
›Ñ—öXØ¨˜Ð_B↑☻QŽ@V°¬♠Ó¥ ì³Þàð÷,24R9W¼pÇlÉ↕ÖÑ£¤žY♫•²Ö♠▬▬”¶h▲☺¢B♦Áäm{☺ZC† ©ªÅ↓‘↨9s’»·↑tÛžÑ–üóìçÝÀ'lDL♦„ & Hˆ↕Ñ‡G°8 ▬Q◘ (☺î“¢]ƒí'Î²ìé/°ì§♫ï(Ñá¬◄õ˜]j¾Ã°ßokoìðÒ
Øî¾¦`‼ó7ÛØ)µ¢	évÓj¤◘;-\ÁlMQêbmf¡` 6ªkÖ„¡
­d!♂;‼½X^šB7Çáµ▼5 ÐÅ"0ÀÄœ-‰ì6«¨♀Õ↨Ï©‰@ÕöO‘‰♂♥íì[þkbAæ¼H♂ç↓þÛGfõ†&¤¬ûNŽÍñý¾Å$j♥Â!→o♦¶ Eøi±ïõzÈS¶QX→©`·?Óã♂AA0ˆ(▬	♣♦ÁB°PL$!♣♦A@ ’→,³@€„, Q€☼}♂}ÖÜ‹û^Þ‹▼‡ÿ»ÿí◄Æú¶mcôÝ♂­ÿ§÷☺}‼¼bFàšãŸ±ûn#€h#G=”˜Ê—rïµo;'9¬§Fò
~\N ¬
Ÿ&0'Ÿ5Ÿ VrP→h~ ▼ éR ¼→V-↑½ã,hcÇ£cûÍ G&@Ñ¼;¡¯»¤y¾‡±∟Á÷Kh0 Ù▲Ö ♂•½¡;ÙªßlÈ!:kê)ÔéMölk◘×e↓ºƒ:þ=y3XÑJª∟“½(©#♥äÇƒGáäåˆ0eš§ÝÆ ½ãˆk÷×ßé›¡ˆ?Îø¢▼Ë”Ô2^Q t "~ý–¥÷ùñïäS³Ä:0 ◘‼ÙáCQøsèÉûŽSD9Ð☺∟.SÊìix+ÑÙkªuþUg'♀D$♣♦Á@ P,¶1♣☻BD►P$T	
♦BDY☺
►►„♦♠ ♠a]GØüùl±s iØì@ûÖÜ} ”M¥ûÛÐÚ
èzhnŸ K†êHioVU~ZÙj”µb0 9˜akÃ+£â<Äá[z'eV1£s¶ò♦Æq▼š´ :Í¦¹7Õ§õŽ∟/ g.í½Ì¼t×AL;¥­ô  ƒ♂›<z♣qj→Bï♠Æc?→0L£7|‼“Aã\
←◘ª=ZcØ→=s~(‘u=®O¡♠?»58:/âw¥CI¿↓aŽ[Kw¡♀êÈ™↕,K▲♠ŒR◄è♣♂☻s} ]♀I3æƒ¶$$$‼¢¬85Q\-ý♠¢R¾w¶9:èºÝ1žzíÎôt%â $¶	♣☻A@ Ðd‼	↓☻B0ŒÈˆ←4♫ˆQ◘Y ♣¶P→▬'ÙcÛöq®o·”< ▼•☼þËFð%þ∟%¾m3c´ì ø*Ôç—%+ƒ(ìL”ñµô®‹$>¼#o}sô~´ß›s…;VõJ†™K†↔º9§¶í8Ö|gI»Æòwi”QÓ→Ý¦qJ»§B§ÖÂ¿↓ì#	Wû‘PÐ»|hm¼?ó±4kÞ yh¬ºÃñï¢ï’¿¯»÷ßç¾♫µ÷G#Fí 7←§Ö+♣p↔‼‘öØø„0Ûîæ^”–Ò®Ã©Ç#aÂ¸'♀D$♣♫BA◄►¤$	E☻A@ PD¶♀,∟☻À,►☻Š(♀Ã}KWô¿gø¿é´ý]Ÿj—H•öþ úøýµîÃÌ0úkËáéŒÜ]▼¹Ÿï§Òèøýc☻ì«ˆ→]E“Ë♀‹ìeìóÃ←7ŽžÊêöÃ·T¾ˆEÆ VK‡šúã~‚Õ☼b5\Ä y♀Ýùï↨~¼))$M[Õí¨fÃWk_õüøu-ŠùùZ¸™ìÉ²Þ}'B§!? ê®µ8ìáze^ôÚÉ}´ˆ þÇ♂h‡D¤{µ†¢Àê~Úár°çƒŸÕ▼~X‘↔°o&Í
☼êË▼´ý</ó~>Ìësâîs·
ÐIÀdÊ©ôì•-5ë♣çz☻↓a
☺@ ˜&▬
◘‚ ` HHb
►† "¡◘( ▬QÐ!☺d ¶P(z5º—ý«‘ÿ&}_►Ñž»nc¦sÐßËj-þ♀j Ý±/xk’õæ?ªW4GÒÊ∟]ðñ 1‚♫èÕ◄´:ÕÄ‼¤Ÿ3˜3çWG\Éà¼®æéïØÔp~§è3”™s¶egG÷ïÞ§hÇ6¥5ó¬>¸(▲Â▬»#‼€ÆË—ŸÒ3ðÒ¸"`♦ä▲♫ jjV[`Œ2Ø`oÐ¶é ZÐø¶5¥G«Xå‹Ô♀¨F¤☺™ò↓¬ÿ>Æþ☺♦f­5ó’¤rãÛ$▼Ü%»þ‚▼☻†gš#œ\ã▬¦¥HîÞ“♂~N‘œ‰’Ó;'Öa
↑0¾¶êw šÙB♫—á¯~Ëw;♠`';¡‹c€',D,♣‚ ` H(R
◘‚ƒ °H(↕A„„ " HH↕♂♣♂♂♠ ☻☻►…☻Š♣♫‚‡OÆyçü?Ÿðô/<ýj Ç<"ù►NîÏÖ¯+.b◄Íï‡et¸`êIj½yaã‚¾?=Å–S×♥»¿)„¢þz•ï:▲®Eh>«‼ýŽ_◘ob‼k­éÇ♫ûá¶œ­ì°♂!2) ▲eîÝ” 	oj«♣Ç ←Šë→Ïb«ñ¥ýá‡KQËÉ™‘¥¤'m♂ƒ↓Ñ)Yõ£gÄ1¿↔ý0_r‼n]’Ò™ CŸÝó×ÿUÚ◘ÑA=‚gx#▲€¤¸‹we☻’ñÿ0bîñÒ♠◄pÌ›¡↔↑►]Â¿ï–‡Šiâ-Êg³☺↓ÃÝ‚-ƒ=\o™¨♥$8•qÔ î¶←♦‚‚  ˆ(↕
♦‚ ! H¨↕Š♦‚‚  lÑG♦!☺♂!E☻€▼€å\»¥ëN};¥ŸÑ}¡æt"ß¿—÷·8äÒòIzv {PÛã↕ÿ #¦ÏX—îÚ ‹C¿!V¥½fx▲►±õ÷L™¿”§♂▬Ž›W»Y¨
›Ÿ§™üHV†Ð¶0Â♀Z¹÷Eƒ¸í–8Ž!éZÈ”Â	e☼q Q3§‼Ú¸@èÎip•§z6NÌ→ ►+Ü®nªœZðo^ä¥¶üîqÈk¯_ã	—Õ.m×'9ŒŽ%•üÆãÁ([♣U♀¹j¹4ë\3%gœÓÞó ♠vÍ™£%iNªÓ5^¶8Â0f|'Nã6Y¯¬‡ÖkëUå—¶¹ÕK↑¯wµ®Ì↓Ÿ1.¤LÊ‼,å»VŠIR‚½©Dn¯ ¢á¾W6ŽwsÈ}÷^Ÿæ™Íg!÷–kvµ¹€k-Õ¹µëá?u<»öš*ÿ←¶bµçë>Z¶ûÌé#mzý“NRÒMÙŒcY6l\ jÐÜy▬¦gBk¡ƒa◄²ª– ▼d£–ÔcRRNvÅfè*u5CÈ­4Vg—¨€ õvr4«+U®y„ýþ Šˆ Ì€UŽ· ¨Û­,♀¹(▬[~ZÃ▲Ã ))•▲~.¿µç{x|®8cÍ6’³X›_ 0um+☼bµ!’£Å‘‘×ö☼òrÂÔYá’ð³´Öì▬ÜnÍ‡Ê}’ÅâI I<üí¬êÚ†↨öôò←?¹•Õ¾û«2†äì>âÙÌ•.óŽåÛ♂Ôòæ2-H¯p”B±˜ûÈm◄»]_`Ö,ôYD←×↑Z3æ▼Gˆ§4&ÇÐÙBdëuþ¯♀Ç«èÖaîp◄„#&Û°NÜ÷Î↕ŽŸ!´m§ƒ←♠Ø±‼u♂…«3ŸíIÙ«—c:(?£¬ú8 cÀã¦gÛWne‘î-ÝþWk¦²Ww­º¯f©´„“¯¨+ã N▼☼Óºì“Ê›ñˆ^i¢Æm¤ú	¾cPÕªSšÇ↑☼œÞ|_Kå←EæÓX ×↔œ­fSþ{♀/%ž¼­×xÊŠ↑Êæmƒþ¯eà:G►³↓ð☼↓Vøæ›vË♂™♂7RøBÄÝpNi¸¶täÕ↓ÄAøŽ[G- 5Þ–¥+8´²ª7¯}↕Ð•”♂&¦™Í²†šKÀ üÞ↨;¸Æ'á¸ZÉI♠”☻À☻b→±ª©»…5Š♥¯Ã½¦›ºhVŸc¡½%³´4:LÍJßséÂÝ·Ÿî¸™{M’;þŸôý☺{sè9»ßú◄ÌÜGK
ÇNýè§ÅBÎîD·÷♫Š.B•Ðo÷Š¦j-ÃÉ¶&♀™`Yj♂gYÐ0ÔIfnŠ«˜žb–JP€¯“Ktæ7e”♣Ù )O ÒEµ¶Cµd¦♦6‰„(Å☻°☺TD•†K&	JXÀwIQ¡?	  Ô`☻
×◄¦◘¢|‚ú*½²‰è2♀bJ×Àg™¢ mÔq§ßæÑuÖå²-å♣M§õÿ•ØY\â♥''lDD♦„‚  Hh↕
♦† ► JÆ↕
♦ˆ Ñ£E …▬◘B E►¡Ü‡ ÿìß↨‘×Ýô‼«♂7<&êpì§’ùÏÍ²Ê←wqzk‹♠øzgÈúM•I¹→àÕÔÍ˜›ö¿¸<b%þnSoÂhŽ›Æ±ë9Uws(ÿþ«~ur‰Ö▲„ªS♀☺ÕÉ☼^↨Yu ±’š:ð§▲ã	Tj{(♦´↔OV[‘‚d:d•L­uÄ±►Mñß‚¼Qc[(ÁÇæ=☼ ♣zDÍo$I ê▲ù¶,6¾ˆ]Ý(dr ¶÷šú=g}♣üÿÉõ3:´[e•hÈài-¥Š@T}Åô)+À☼r→‚‚a ˆ(▬↕◄„AA►P$¶)♣♦EA Q♀↔→ 4Y◘◘@
(☺ÖXòNMÐ☼¿|ù‡óÿ{û,‰ö~@ÇÇË|CÏú÷ä/»ªuì’:Óöú¹0ÇÃî} ùý€Ÿ^2é-ð£ÓˆE‹E2☼ÿ•b▲Ä óx◘ñþ F™î ü>N À×odòéò×♀•æc[†!¬Œ¶À▲►ïÙúÿö/Ôo¹♀êÛÙ«ù¶N“ªÉt§¦›Qá§çà}çÒ ²-ØÏ;†Ló,`∟Ÿ 
ÙŒÔß↑Ž•Ç♀²Æ?♦c☻↔_!ƒÿîªš m♥|"Í=pXD¼!òáUZ8ßyÃÒøœå↕>1*Ñ33ão%õ☼☼ù
ûøžû↨ü!¦1åÙrñ µ‹º)¡Ìh•[…rj¶±◄œïC¡♀%‚0T& ™Ìx'♀Cñ„´!!♂ $HBÍ►►ÑD!€ C•ë}òèÍ£&vs|gÈm
„ósèÈ·!Ì¥äÎàoCp™¬ÙÀq dÌÜ!ýÏçs88•☺±!aš3BÜ9‚òn&Ã^L€A(x|ÞˆËÝ…j 2c	C↨L▲NŸÃÉ•Š*|0D‰äócK♠▬☼♀ ¯›É’`ôtÁHø±¿‡‘ —»áÌ♀x)‡Í‹¤☼
•:ku4Ûî Ï♫m☼€ ∟ÿ.xyòç☺@♥‡4fÑ››žn~h"Sjçæ~€¡Ø(‚
►‚„!!◘ˆ"↕↑‚ ²►¢Ë,„♣€P♦←+mKó_™ëÿ↨ ~µ↔ß¶ÿ•ú_µ|ëmþW•}·ùR_ò¾{ñO 'Þo 
5®´H,A\Wj
J♂‘¿~mT5 ¦ T¶—í_Í%4áIM5Ë~Ô¶¼üß←´|sûäoÜ|@h(¨*-”▬% Ò¼Km4ëh¶QSX♣rÒMX5▬ÚÊY³{ ·aø6Œ »£ãv  Þù♀ë_←´6Þs™cbhi ®▬‚ÅqPm”§_♫è6lüÙ Ññ»FNp¬*ð¼I) ¤¤Š‚}·à¿:Jîö%%öß‚ðS3YoZ%½`­:♦—•}gjé«%EL◄³·ïñ♠Ž‼9¦¡·[tß♣ÕF…iØŽ‚ò­´ÐUc£Qp  ♥¾<b>moov</b>   <b>lmvhd</b>    ÞˆÉ☺ÞˆÉ☺  ¬D ☺Gÿ ☺  ☺            ☺               ☺              @                              ♥  ♥♣trak   \tkhd   ☺ÞˆÉ☺ÞˆÉ☺   ☻     ☺Gÿ            ☺    ☺               ☺              @             ☻¡mdia    mdhd    ÞˆÉ☺ÞˆÉ☺  ¬D ☺GÿUÄ     -hdlr        soun            <b>SoundHandler</b>   ☻<b>Lminf</b>   ►<b>smhd</b>           $dinf   ∟dref       ☺   ♀url    ☺  ☻►<b>stbl</b>   <b>dstsd</b>       ☺   Tmp4a       ☺         ☻ ►    ¬D     0esds    ♥€€€▼   ♦€€€¶@§ ↑  ☻î  ☻î ♣€€€☻↕►♠☺☻   ↑stts       ☺   R  ♦    ∟stsc       ☺   ☺   R   ☺  ☺\stsz           R  ☻[  ☻L  ☻1  ☺ô  ☻“  ☻%  ☻d  ☺ø  ☻9  ☻9  ☻H  ☺Þ  ☻◘  ☺ý  ☻▬  ☻o  ☻•  ☻♫  ☻∟  ☻#  ☻)  ☻j  ☻♫  ☻&  ☻8  ☻a  ☻%  ☻↨  ☻&  ☻„  ☻↕  ☻(  ☻Õ  ☺ë  ☻◘  ☻▼  ☻-  ☻+  ☻n  ☻►  ☻▲  ☻v  ☻v  ☻▲  ☻v  ☻◘  ☻*  ☻→  ☻-  ☻▼  ☻'  ☻'  ☻%  ☻☼  ☻#  ☻3  ☺ï  ☻►  ☻‼  ☻▼  ☺ì  ☻♀  ☻3  ☺õ  ☻↓  ☺ù  ☻9  ☻↕  ☻)  ♥9  ☻9  ☻♦  ☻♀  ☻•  ♥∟  ☺÷  ☺Þ  ☻♫  ☺þ  ♥↓  ☻¶  ☺Þ   ¶stco       ☺   O   <b>Eudta</b>   <b>5meta</b>       !hdlr        mdir                ◘<b>ilst</b>   ◘<b>Xtra</b><div id="preview-all"><div class="button" onclick="Hb('W',1)">Show all readable texts in this file...</div></div>
